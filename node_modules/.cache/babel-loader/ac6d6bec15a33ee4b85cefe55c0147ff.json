{"ast":null,"code":"import _classCallCheck from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/src/components/Completed.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    color:#282c34;\\n    font-size:14px;\\n    padding:10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color:#282c34;\\n    font-size:54px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    width:33%;\\n    height:100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:30%;\\n    display:flex;\\n    flex-direction: row;\\n    border-bottom: solid 2px;\\n    border-color:#282c34;\\n    background-color:red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nvar CompletedContainer = styled.div(_templateObject());\nvar NumberContainer = styled.div(_templateObject2());\nvar CompletedNumber = styled.h1(_templateObject3());\nvar CompletedText = styled.h2(_templateObject4());\n\nvar Completed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Completed, _Component);\n\n  function Completed(props) {\n    _classCallCheck(this, Completed);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Completed).call(this, props));\n  }\n\n  _createClass(Completed, [{\n    key: \"render\",\n    value: function render() {\n      var today = new Date();\n      var day = today.getDate();\n      var month = today.getMonth();\n      month = month + 1;\n      month = month;\n      var year = today.getFullYear();\n      var date = \"\".concat(year, \"-\").concat(month, \"-\").concat(day); // Adds 0 to single digit days and months\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n\n      var prevMonday = new Date();\n      prevMonday.setDate(prevMonday.getDate() - (prevMonday.getDay() + 6) % 7);\n      formattedMonday = moment().format(prevMonday);\n      console.log(formattedMonday);\n      var totalIntegrations = \"\".concat(this.props.records.length);\n      var weeklyIntegrations = [];\n      var dailyIntegrations = [];\n      this.props.records.map(function (record) {\n        var completionDates = [];\n\n        if (record.fields['Completion Date']) {\n          completionDates.push(record.fields['Completion Date'].split('T'));\n          completionDates.pop();\n          completionDates.forEach(function (completionDate) {\n            if (completionDate[0] == date) {\n              dailyIntegrations.push(completionDate);\n            }\n          });\n        }\n      }); //console.log(weeklyIntegrations);\n\n      return React.createElement(CompletedContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(NumberContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CompletedNumber, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, weeklyIntegrations.length), React.createElement(CompletedText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Integrations Completed This Week\")), React.createElement(NumberContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CompletedNumber, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, totalIntegrations), React.createElement(CompletedText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Total Integrations Completed\")), React.createElement(NumberContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(CompletedNumber, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, dailyIntegrations.length), React.createElement(CompletedText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Integrations Completed Today\")));\n    }\n  }]);\n\n  return Completed;\n}(Component);\n\nexport default Completed;","map":{"version":3,"sources":["/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/src/components/Completed.js"],"names":["React","Component","styled","moment","CompletedContainer","div","NumberContainer","CompletedNumber","h1","CompletedText","h2","Completed","props","today","Date","day","getDate","month","getMonth","year","getFullYear","date","prevMonday","setDate","getDay","formattedMonday","format","console","log","totalIntegrations","records","length","weeklyIntegrations","dailyIntegrations","map","record","completionDates","fields","push","split","pop","forEach","completionDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nconst CompletedContainer = styled.div`\n    width:100%;\n    height:30%;\n    display:flex;\n    flex-direction: row;\n    border-bottom: solid 2px;\n    border-color:#282c34;\n    background-color:red;\n`;\n\nconst NumberContainer = styled.div`\n    width:33%;\n    height:100%;\n`;\n\nconst CompletedNumber = styled.h1`\n    color:#282c34;\n    font-size:54px;\n`;\n\nconst CompletedText = styled.h2`\n    color:#282c34;\n    font-size:14px;\n    padding:10px;\n`;\n\nclass Completed extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n \n  let today = new Date();\n  let day = today.getDate();\n  \n  let month = today.getMonth();\n  month = month+1;\n  month = month;\n  let year = today.getFullYear();\n  const date = `${year}-${month}-${day}`;\n  // Adds 0 to single digit days and months\n  if (month < 10){\n    month = \"0\"+month;\n  }\n\n    if (day < 10){\n    day = \"0\"+day;\n    }    \n\n    let prevMonday = new Date();\nprevMonday.setDate(prevMonday.getDate() - (prevMonday.getDay() + 6) % 7);\nformattedMonday = moment().format(prevMonday);\n console.log(formattedMonday)\n \n    const totalIntegrations = `${this.props.records.length}`;\n    let weeklyIntegrations = [];\n    let dailyIntegrations = [];\n    \n    this.props.records.map(record => {\n        let completionDates = [];\n        if(record.fields['Completion Date']) {\n          completionDates.push(record.fields['Completion Date'].split('T'));\n          completionDates.pop();\n         \n          completionDates.forEach(completionDate => {\n            \n            if(completionDate[0] == date) {\n              dailyIntegrations.push(completionDate);\n            }\n          \n  \n          })\n        }\n       \n      })\n      \n     //console.log(weeklyIntegrations);\n    return (\n      <CompletedContainer>\n          <NumberContainer>\n            <CompletedNumber>{weeklyIntegrations.length}</CompletedNumber>\n            <CompletedText>Integrations Completed This Week</CompletedText>\n          </NumberContainer>\n          <NumberContainer>\n            <CompletedNumber>{totalIntegrations}</CompletedNumber>\n            <CompletedText>Total Integrations Completed</CompletedText>\n          </NumberContainer>\n          <NumberContainer>\n          <CompletedNumber>{dailyIntegrations.length}</CompletedNumber>\n          <CompletedText>Integrations Completed Today</CompletedText>\n          </NumberContainer>\n      </CompletedContainer>\n    )\n  }\n}\n\nexport default Completed;"]},"metadata":{},"sourceType":"module"}