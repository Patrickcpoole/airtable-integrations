{"ast":null,"code":"import _classCallCheck from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/src/components/Integrator.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color:#282c34;\\n    font-size:1.5rem;\\n    margin-bottom:3%;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n     height:30%;\\n     width:100%;\\n    border-bottom: solid 2px;\\n    border-color:#282c34;\\n    \\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-direction:column;\\n    align-items: center;\\n    justify-content: flex-start;\\n    width: 23vw;\\n    margin-right:2%;\\n    margin-left:2%;\\n    margin-top:1%;\\n    background-color:white;\\n    height: 65vh;\\n    border-radius:8px;\\n    box-shadow: 0 4px 6px 0 hsla(0, 0%, 0%, 0.2);\\n    transition: .3s all ease-in-out;\\n    :hover {\\n      background-color:#ffbf00;\\n      cursor: pointer;\\n  }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState } from 'react';\nimport { animated, useTransition } from 'react-spring';\nimport './App.css';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport Completed from './Completed';\nimport CompanyInfo from './CompanyInfo';\nimport patrickImage from '../fh-patrick.jpg';\nvar IntegratorContainer = styled.div(_templateObject());\nvar Header = styled.div(_templateObject2());\nvar IntegratorName = styled.h3(_templateObject3());\n\nvar Integrator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Integrator, _Component);\n\n  function Integrator(props) {\n    var _this;\n\n    _classCallCheck(this, Integrator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Integrator).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(Integrator, [{\n    key: \"render\",\n    value: function render() {\n      var today = new Date();\n      var day = today.getDate();\n      var month = today.getMonth();\n      month = month + 1;\n      var year = today.getFullYear(); // Adds 0 to single digit days and months\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n\n      var date = \"\".concat(year, \"-\").concat(month, \"-\").concat(day); // console.log(date);\n\n      var dailyIntegrations = [];\n      var totalIntegrations = [];\n      var monthlyIntegrations = [];\n      this.props.records.map(function (record) {\n        var completionDates = []; //console.log(record);\n\n        if (record.fields['Completion Date']) {\n          completionDates.push(record.fields['Completion Date'].split('T').shift()); //console.log(completionDates);  \n        }\n\n        completionDates.forEach(function (completionDate) {\n          totalIntegrations.push(completionDate); //console.log(completionDate);\n\n          if (completionDate === date) {\n            dailyIntegrations.push(completionDate);\n          }\n\n          var completionMonth = completionDate.split('-')[1];\n\n          if (completionMonth === month) {\n            monthlyIntegrations.push(completionDate);\n          }\n        });\n      });\n      return React.createElement(IntegratorContainer, {\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fh-kit.com/buttons/v2/?red=cc0000&orange=ff6000&green=3AB134&yellow=ffbf00\",\n        type: \"text/css\",\n        media: \"screen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"picture\",\n        src: this.props.image,\n        alt: \"integrator-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(IntegratorName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.props.name)), React.createElement(Completed, {\n        records: this.props.records,\n        monthly: monthlyIntegrations.length,\n        total: totalIntegrations.length,\n        daily: dailyIntegrations.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(CompanyInfo, {\n        records: this.props.records,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        name: this.props.name,\n        records: this.props.records,\n        image: this.props.image,\n        title: this.props.title,\n        slack: this.props.slack,\n        timezone: this.props.timezone,\n        phone: this.props.phone,\n        email: this.props.email,\n        office: this.props.office,\n        manager: this.props.manager,\n        show: this.state.isOpen,\n        onClose: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Integrator;\n}(Component);\n\nexport default Integrator;","map":{"version":3,"sources":["/Users/patrickcpoole/Desktop/reactjs/airtable-integrations/src/components/Integrator.js"],"names":["React","Component","useState","animated","useTransition","styled","Modal","Completed","CompanyInfo","patrickImage","IntegratorContainer","div","Header","IntegratorName","h3","Integrator","props","toggleModal","setState","isOpen","state","today","Date","day","getDate","month","getMonth","year","getFullYear","date","dailyIntegrations","totalIntegrations","monthlyIntegrations","records","map","record","completionDates","fields","push","split","shift","forEach","completionDate","completionMonth","image","name","length","title","slack","timezone","phone","email","office","manager"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,QAAR,EAAkBC,aAAlB,QAAsC,cAAtC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAKA,IAAMC,mBAAmB,GAAGL,MAAM,CAACM,GAAV,mBAAzB;AAoBE,IAAMC,MAAM,GAAGP,MAAM,CAACM,GAAV,oBAAZ;AAQA,IAAME,cAAc,GAAGR,MAAM,CAACS,EAAV,oBAApB;;IAMIC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAOnBC,WAPmB,GAOL,YAAM;AAElB,YAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADR,OAAd;AAGD,KAZkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAC;AADI,KAAb;AAFiB;AAKlB;;;;6BASQ;AACP,UAAIE,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACF,UAAIC,GAAG,GAAGF,KAAK,CAACG,OAAN,EAAV;AAEA,UAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,EAAZ;AACAD,MAAAA,KAAK,GAAGA,KAAK,GAAC,CAAd;AACA,UAAIE,IAAI,GAAGN,KAAK,CAACO,WAAN,EAAX,CANS,CAQT;;AACA,UAAIH,KAAK,GAAG,EAAZ,EAAe;AACbA,QAAAA,KAAK,GAAG,MAAIA,KAAZ;AACD;;AAEC,UAAIF,GAAG,GAAG,EAAV,EAAa;AACbA,QAAAA,GAAG,GAAG,MAAIA,GAAV;AACC;;AAED,UAAMM,IAAI,aAAMF,IAAN,cAAcF,KAAd,cAAuBF,GAAvB,CAAV,CAjBO,CAkBR;;AAEC,UAAIO,iBAAiB,GAAG,EAAxB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AAEA,UAAIC,mBAAmB,GAAG,EAA1B;AAEA,WAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAE7B,YAAIC,eAAe,GAAG,EAAtB,CAF6B,CAI7B;;AACA,YAAGD,MAAM,CAACE,MAAP,CAAc,iBAAd,CAAH,EAAqC;AACnCD,UAAAA,eAAe,CAACE,IAAhB,CAAqBH,MAAM,CAACE,MAAP,CAAc,iBAAd,EAAiCE,KAAjC,CAAuC,GAAvC,EAA4CC,KAA5C,EAArB,EADmC,CAEnC;AACD;;AAECJ,QAAAA,eAAe,CAACK,OAAhB,CAAwB,UAAAC,cAAc,EAAI;AACxCX,UAAAA,iBAAiB,CAACO,IAAlB,CAAuBI,cAAvB,EADwC,CAExC;;AACA,cAAGA,cAAc,KAAKb,IAAtB,EAA4B;AAC1BC,YAAAA,iBAAiB,CAACQ,IAAlB,CAAuBI,cAAvB;AACD;;AACD,cAAIC,eAAe,GAAGD,cAAc,CAACH,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAtB;;AACA,cAAGI,eAAe,KAAKlB,KAAvB,EAA8B;AAC5BO,YAAAA,mBAAmB,CAACM,IAApB,CAAyBI,cAAzB;AACD;AAEF,SAXD;AAYH,OAtBH;AAwBA,aAEI,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAE,KAAKzB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,oFAA5B;AAAiH,QAAA,IAAI,EAAC,UAAtH;AAAiI,QAAA,KAAK,EAAC,QAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAW4B,KAAzC;AAAgD,QAAA,GAAG,EAAC,oBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAK5B,KAAL,CAAW6B,IAA5B,CAFJ,CAFF,EAME,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWiB,OAA/B;AAAwC,QAAA,OAAO,EAAID,mBAAmB,CAACc,MAAvE;AAA+E,QAAA,KAAK,EAAEf,iBAAiB,CAACe,MAAxG;AAAgH,QAAA,KAAK,EAAEhB,iBAAiB,CAACgB,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAI,KAAK9B,KAAL,CAAWiB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQM,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAW6B,IAAxB;AAA8B,QAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWiB,OAAlD;AAA2D,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAW4B,KAA7E;AAAoF,QAAA,KAAK,EAAE,KAAK5B,KAAL,CAAW+B,KAAtG;AACA,QAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgC,KADlB;AACyB,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWiC,QAD9C;AACwD,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWkC,KAD1E;AACiF,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWmC,KADnG;AAEA,QAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWoC,MAFnB;AAE2B,QAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWqC,OAF/C;AAEwD,QAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWD,MAFzE;AAEiF,QAAA,OAAO,EAAE,KAAKF,WAF/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARN,CAFJ;AAgBD;;;;EAhFsBhB,S;;AAmFzB,eAAec,UAAf","sourcesContent":["import React, { Component, useState } from 'react'\nimport {animated, useTransition} from 'react-spring';\nimport './App.css';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport Completed from './Completed';\nimport CompanyInfo from './CompanyInfo';\nimport patrickImage from '../fh-patrick.jpg';\n\n\n\n\nconst IntegratorContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 23vw;\n    margin-right:2%;\n    margin-left:2%;\n    margin-top:1%;\n    background-color:white;\n    height: 65vh;\n    border-radius:8px;\n    box-shadow: 0 4px 6px 0 hsla(0, 0%, 0%, 0.2);\n    transition: .3s all ease-in-out;\n    :hover {\n      background-color:#ffbf00;\n      cursor: pointer;\n  }\n  `;\n\n  const Header = styled.div`\n     height:30%;\n     width:100%;\n    border-bottom: solid 2px;\n    border-color:#282c34;\n    \n  `;\n\n  const IntegratorName = styled.h3`\n    color:#282c34;\n    font-size:1.5rem;\n    margin-bottom:3%;\n  `;\n\nclass Integrator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen:false\n    }\n  }\n\n  toggleModal = () => {\n    \n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n      \n  render() {\n    let today = new Date();\n  let day = today.getDate();\n  \n  let month = today.getMonth();\n  month = month+1;\n  let year = today.getFullYear();\n \n  // Adds 0 to single digit days and months\n  if (month < 10){\n    month = \"0\"+month;\n  }\n\n    if (day < 10){\n    day = \"0\"+day;\n    }    \n\n    const date = `${year}-${month}-${day}`;\n   // console.log(date);\n   \n    let dailyIntegrations = [];\n    let totalIntegrations = [];\n    \n    let monthlyIntegrations = [];\n   \n    this.props.records.map(record => {\n      \n        let completionDates = [];\n       \n        //console.log(record);\n        if(record.fields['Completion Date']) {\n          completionDates.push(record.fields['Completion Date'].split('T').shift());\n          //console.log(completionDates);  \n        }\n        \n          completionDates.forEach(completionDate => {\n            totalIntegrations.push(completionDate);\n            //console.log(completionDate);\n            if(completionDate === date) {          \n              dailyIntegrations.push(completionDate);\n            }\n            let completionMonth = completionDate.split('-')[1];\n            if(completionMonth === month) {\n              monthlyIntegrations.push(completionDate);\n            }\n            \n          })\n      })\n      \n    return (\n      \n        <IntegratorContainer onClick={this.toggleModal} >\n        <link rel=\"stylesheet\" href=\"https://fh-kit.com/buttons/v2/?red=cc0000&orange=ff6000&green=3AB134&yellow=ffbf00\" type=\"text/css\" media=\"screen\" />\n          <Header>\n            <img className=\"picture\" src={this.props.image} alt=\"integrator-profile\"/>\n              <IntegratorName>{this.props.name}</IntegratorName>\n          </Header>\n          <Completed records={this.props.records} monthly = {monthlyIntegrations.length} total={totalIntegrations.length} daily={dailyIntegrations.length}/>\n          <CompanyInfo records = {this.props.records}/>\n              <Modal name={this.props.name} records={this.props.records} image={this.props.image} title={this.props.title}\n              slack={this.props.slack} timezone={this.props.timezone} phone={this.props.phone} email={this.props.email}\n              office={this.props.office} manager={this.props.manager} show={this.state.isOpen} onClose={this.toggleModal} />  \n        </IntegratorContainer>\n      \n    )\n  }\n}\n\nexport default Integrator;"]},"metadata":{},"sourceType":"module"}