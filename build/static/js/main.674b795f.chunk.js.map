{"version":3,"sources":["components/LoadingSpinner.js","components/Chart.js","components/Modal.js","components/Completed.js","components/CompanyInfo.js","components/Integrator.js","components/App.js","serviceWorker.js","index.js","airtable-logo.png","fh-patrick.jpg","alex-neubauer.jpeg","amaia-ibarra.jpeg","marco.png","zack.jpeg","elly.jpg","tobey.jpg","johnny.png"],"names":["SpinnerContainer","styled","div","_templateObject","LoadingSpinner","react_default","a","createElement","className","src","logo","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","es","height","width","data","options","aspectRatio","responsive","maintainAspectRatio","title","display","displayTitle","text","tierType","fontSize","fontColor","legend","displayLegend","position","legendPosition","labels","boxWidth","FontSize","Component","defaultProps","location","CompletedContainer","Modal_templateObject","NumberContainer","_templateObject2","CompletedNumber","h1","_templateObject3","CompletedText","h2","_templateObject4","CompanyContainer","_templateObject5","CompanyHeader","_templateObject6","CompanyHeading","_templateObject7","CompanySubheading","_templateObject8","InfoContainer","_templateObject9","InfoRight","_templateObject10","InfoLeft","_templateObject11","InfoText","p","_templateObject12","CompanyLocation","h3","_templateObject13","color","marginLeft","Modal","chartDataLive","getChartData","console","log","tier0","setState","datasets","label","tier1","tier2","tier3","tier4","backgroundColor","tier0Live","tier1Live","tier2Live","tier3Live","tier4Live","mostRecentNameLive","show","monthly","total","daily","recentName","colorProp","mostRecentCompanyRegion","recentDate","recentSubmitter","recentBuilder","recentTier","recentShortname","recentWebType","components_Chart","name","image","onClick","onClose","slack","timezone","phone","email","office","manager","monthlyLive","totalLive","dailyLive","colorPropLive","mostRecentCompanyRegionLive","mostRecentDateLive","mostRecentSubmitterLive","mostRecentIntegrationTypeLive","mostRecentTierLive","mostRecentShortnameLive","mostRecentWebTypeLive","style","React","Completed_templateObject","Completed_templateObject2","Completed_templateObject3","Completed_templateObject4","Completed","Completed_CompletedContainer","Completed_NumberContainer","Completed_CompletedNumber","Completed_CompletedText","CompanyInfo_templateObject","CompanyInfo_templateObject2","CompanyInfo_templateObject3","CompanyInfo_templateObject4","CompanyInfo_templateObject5","CompanyInfo_templateObject6","CompanyInfo_templateObject7","CompanyInfo_templateObject8","CompanyInfo_templateObject9","CompanyInfo","CompanyInfo_CompanyContainer","CompanyInfo_CompanyHeader","CompanyInfo_CompanyHeading","CompanyInfo_CompanySubheading","mostRecentName","CompanyInfo_CompanyLocation","CompanyInfo_InfoContainer","CompanyInfo_InfoLeft","CompanyInfo_InfoText","mostRecentDate","mostRecentSubmitter","mostRecentBuilder","CompanyInfo_InfoRight","mostRecentTier","mostRecentShortname","mostRecentWebType","IntegratorContainer","Integrator_templateObject","Header","Integrator_templateObject2","IntegratorName","Integrator_templateObject3","Integrator","toggleModal","isOpen","document","body","overflow","alt","components_Completed","components_CompanyInfo","components_Modal","require","config","path","AppContainer","App_templateObject","MainHeading","App_templateObject2","Container","App_templateObject3","App","loading","patrick","records","tier","live","integrationType","info","patrickImage","nuebs","neubsImage","zack","zackImage","marco","marcoImage","amaia","amaiaImage","elly","ellyImage","tobey","tobeyImage","johnny","defineProperty","johnnyImage","_this2","idArray","today","Date","day","getDate","month","getMonth","year","getFullYear","date","concat","base","apiKey","process","dailyIntegrationsArrayLive","totalIntegrationsArrayLive","monthlyIntegrationsArrayLive","dailyIntegrationsArrayLiveNeubs","totalIntegrationsArrayLiveNeubs","monthlyIntegrationsArrayLiveNeubs","dailyIntegrationsArrayLiveZack","totalIntegrationsArrayLiveZack","monthlyIntegrationsArrayLiveZack","dailyIntegrationsArrayLiveMarco","totalIntegrationsArrayLiveMarco","monthlyIntegrationsArrayLiveMarco","dailyIntegrationsArrayLiveAmaia","totalIntegrationsArrayLiveAmaia","monthlyIntegrationsArrayLiveAmaia","dailyIntegrationsArrayLiveElly","totalIntegrationsArrayLiveElly","monthlyIntegrationsArrayLiveElly","dailyIntegrationsArrayLiveTobey","totalIntegrationsArrayLiveTobey","monthlyIntegrationsArrayLiveTobey","dailyIntegrationsArrayLiveJohnny","totalIntegrationsArrayLiveJohnny","monthlyIntegrationsArrayLiveJohnny","companyArrayLive","completionDateArrayLive","submitterArrayLive","integrationTypeArrayLive","tierArrayLive","shortnameArrayLive","webTypeArrayLive","companyRegionArrayLive","companyArrayLiveNeubs","completionDateArrayLiveNeubs","submitterArrayLiveNeubs","integrationTypeArrayLiveNeubs","tierArrayLiveNeubs","shortnameArrayLiveNeubs","webTypeArrayLiveNeubs","companyRegionArrayLiveNeubs","companyArrayLiveZack","completionDateArrayLiveZack","submitterArrayLiveZack","integrationTypeArrayLiveZack","tierArrayLiveZack","shortnameArrayLiveZack","webTypeArrayLiveZack","companyRegionArrayLiveZack","companyArrayLiveMarco","completionDateArrayLiveMarco","submitterArrayLiveMarco","integrationTypeArrayLiveMarco","tierArrayLiveMarco","shortnameArrayLiveMarco","webTypeArrayLiveMarco","companyRegionArrayLiveMarco","companyArrayLiveAmaia","completionDateArrayLiveAmaia","submitterArrayLiveAmaia","integrationTypeArrayLiveAmaia","tierArrayLiveAmaia","shortnameArrayLiveAmaia","webTypeArrayLiveAmaia","companyRegionArrayLiveAmaia","companyArrayLiveElly","completionDateArrayLiveElly","submitterArrayLiveElly","integrationTypeArrayLiveElly","tierArrayLiveElly","shortnameArrayLiveElly","webTypeArrayLiveElly","companyRegionArrayLiveElly","companyArrayLiveTobey","completionDateArrayLiveTobey","submitterArrayLiveTobey","integrationTypeArrayLiveTobey","tierArrayLiveTobey","shortnameArrayLiveTobey","webTypeArrayLiveTobey","companyRegionArrayLiveTobey","companyArrayLiveJohnny","completionDateArrayLiveJohnny","submitterArrayLiveJohnny","integrationTypeArrayLiveJohnny","tierArrayLiveJohnny","shortnameArrayLiveJohnny","webTypeArrayLiveJohnny","companyRegionArrayLiveJohnny","tier0LiveNeubs","tier1LiveNeubs","tier2LiveNeubs","tier3LiveNeubs","tier4LiveNeubs","tier0LiveZack","tier1LiveZack","tier2LiveZack","tier3LiveZack","tier4LiveZack","tier0LiveMarco","tier1LiveMarco","tier2LiveMarco","tier3LiveMarco","tier4LiveMarco","tier0LiveAmaia","tier1LiveAmaia","tier2LiveAmaia","tier3LiveAmaia","tier4LiveAmaia","tier0LiveElly","tier1LiveElly","tier2LiveElly","tier3LiveElly","tier4LiveElly","tier0LiveTobey","tier1LiveTobey","tier2LiveTobey","tier3LiveTobey","tier4LiveTobey","tier0LiveJohnny","tier1LiveJohnny","tier2LiveJohnny","tier3LiveJohnny","tier4LiveJohnny","totalRecordsLive","totalRecordsLiveNeubs","totalRecordsLiveZack","totalRecordsLiveMarco","totalRecordsLiveAmaia","totalRecordsLiveElly","totalRecordsLiveTobey","totalRecordsLiveJohnny","select","sort","field","direction","eachPage","fetchNextPage","forEach","record","fields","push","completionDateLive","split","shift","lastItemNameLive","length","lastItemDateLive","lastItemDateFormattedLive","moment","format","lastItemSubmitterLive","lastItemIntegrationTypeLive","lastItemTierLive","lastItemShortnameLive","lastItemWebTypeLive","lastCompanyRegionLive","err","error","dailyIntegrationsArray","totalIntegrationsArray","monthlyIntegrationsArray","companyArray","completionDateArray","submitterArray","builderArray","tierArray","shortnameArray","webTypeArray","companyRegionArray","dailyIntegrationsArrayNeubs","totalIntegrationsArrayNeubs","monthlyIntegrationsArrayNeubs","companyArrayNeubs","completionDateArrayNeubs","submitterArrayNeubs","builderArrayNeubs","tierArrayNeubs","shortnameArrayNeubs","webTypeArrayNeubs","companyRegionArrayNeubs","dailyIntegrationsArrayZack","totalIntegrationsArrayZack","monthlyIntegrationsArrayZack","companyArrayZack","completionDateArrayZack","submitterArrayZack","builderArrayZack","tierArrayZack","shortnameArrayZack","webTypeArrayZack","companyRegionArrayZack","dailyIntegrationsArrayMarco","totalIntegrationsArrayMarco","monthlyIntegrationsArrayMarco","companyArrayMarco","completionDateArrayMarco","submitterArrayMarco","builderArrayMarco","tierArrayMarco","shortnameArrayMarco","webTypeArrayMarco","companyRegionArrayMarco","dailyIntegrationsArrayAmaia","totalIntegrationsArrayAmaia","monthlyIntegrationsArrayAmaia","companyArrayAmaia","completionDateArrayAmaia","submitterArrayAmaia","builderArrayAmaia","tierArrayAmaia","shortnameArrayAmaia","webTypeArrayAmaia","companyRegionArrayAmaia","dailyIntegrationsArrayElly","totalIntegrationsArrayElly","monthlyIntegrationsArrayElly","companyArrayElly","completionDateArrayElly","submitterArrayElly","builderArrayElly","tierArrayElly","shortnameArrayElly","webTypeArrayElly","companyRegionArrayElly","dailyIntegrationsArrayTobey","totalIntegrationsArrayTobey","monthlyIntegrationsArrayTobey","companyArrayTobey","completionDateArrayTobey","submitterArrayTobey","builderArrayTobey","tierArrayTobey","shortnameArrayTobey","webTypeArrayTobey","companyRegionArrayTobey","dailyIntegrationsArrayJohnny","totalIntegrationsArrayJohnny","monthlyIntegrationsArrayJohnny","companyArrayJohnny","completionDateArrayJohnny","submitterArrayJohnny","builderArrayJohnny","tierArrayJohnny","shortnameArrayJohnny","webTypeArrayJohnny","companyRegionArrayJohnny","tier0Neubs","tier1Neubs","tier2Neubs","tier3Neubs","tier4Neubs","tier0Zack","tier1Zack","tier2Zack","tier3Zack","tier4Zack","tier0Marco","tier1Marco","tier2Marco","tier3Marco","tier4Marco","tier0Amaia","tier1Amaia","tier2Amaia","tier3Amaia","tier4Amaia","tier0Elly","tier1Elly","tier2Elly","tier3Elly","tier4Elly","tier0Tobey","tier1Tobey","tier2Tobey","tier3Tobey","tier4Tobey","tier0Johnny","tier1Johnny","tier2Johnny","tier3Johnny","tier4Johnny","totalRecords","totalRecordsNeubs","totalRecordsZack","totalRecordsMarco","totalRecordsAmaia","totalRecordsElly","totalRecordsTobey","totalRecordsJohnny","completionDate","lastItemName","lastItemDate","lastItemDateFormatted","lastItemSubmitter","lastItemBuilder","lastItemTier","lastItemShortname","lastItemWebType","lastCompanyRegion","setTimeout","pop","green","blue","pink","mostRecentNameNeubs","mostRecentDateNeubs","mostRecentSubmitterNeubs","mostRecentBuilderNeubs","mostRecentTierNeubs","mostRecentShortnameNeubs","mostRecentWebTypeNeubs","mostRecentCompanyRegionNeubs","colorPropNeubs","mostRecentNameLiveNeubs","mostRecentDateLiveNeubs","mostRecentSubmitterLiveNeubs","mostRecentIntegrationTypeLiveNeubs","mostRecentTierLiveNeubs","mostRecentShortnameLiveNeubs","mostRecentWebTypeLiveNeubs","mostRecentCompanyRegionLiveNeubs","colorPropLiveNeubs","mostRecentNameZack","mostRecentDateZack","mostRecentSubmitterZack","mostRecentBuilderZack","mostRecentTierZack","mostRecentShortnameZack","mostRecentWebTypeZack","mostRecentCompanyRegionZack","colorPropZack","mostRecentNameLiveZack","mostRecentDateLiveZack","mostRecentSubmitterLiveZack","mostRecentIntegrationTypeLiveZack","mostRecentTierLiveZack","mostRecentShortnameLiveZack","mostRecentWebTypeLiveZack","mostRecentCompanyRegionLiveZack","colorPropLiveZack","mostRecentNameMarco","mostRecentDateMarco","mostRecentSubmitterMarco","mostRecentBuilderMarco","mostRecentTierMarco","mostRecentShortnameMarco","mostRecentWebTypeMarco","mostRecentCompanyRegionMarco","colorPropMarco","mostRecentNameLiveMarco","mostRecentDateLiveMarco","mostRecentSubmitterLiveMarco","mostRecentIntegrationTypeLiveMarco","mostRecentTierLiveMarco","mostRecentShortnameLiveMarco","mostRecentWebTypeLiveMarco","mostRecentCompanyRegionLiveMarco","colorPropLiveMarco","mostRecentNameAmaia","mostRecentDateAmaia","mostRecentSubmitterAmaia","mostRecentBuilderAmaia","mostRecentTierAmaia","mostRecentShortnameAmaia","mostRecentWebTypeAmaia","mostRecentCompanyRegionAmaia","colorPropAmaia","mostRecentNameLiveAmaia","mostRecentDateLiveAmaia","mostRecentSubmitterLiveAmaia","mostRecentIntegrationTypeLiveAmaia","mostRecentTierLiveAmaia","mostRecentShortnameLiveAmaia","mostRecentWebTypeLiveAmaia","mostRecentCompanyRegionLiveAmaia","colorPropLiveAmaia","mostRecentNameElly","mostRecentDateElly","mostRecentSubmitterElly","mostRecentBuilderElly","mostRecentTierElly","mostRecentShortnameElly","mostRecentWebTypeElly","mostRecentCompanyRegionElly","colorPropElly","mostRecentNameLiveElly","mostRecentDateLiveElly","mostRecentSubmitterLiveElly","mostRecentIntegrationTypeLiveElly","mostRecentTierLiveElly","mostRecentShortnameLiveElly","mostRecentWebTypeLiveElly","mostRecentCompanyRegionLiveElly","colorPropLiveElly","mostRecentNameTobey","mostRecentDateTobey","mostRecentSubmitterTobey","mostRecentBuilderTobey","mostRecentTierTobey","mostRecentShortnameTobey","mostRecentWebTypeTobey","mostRecentCompanyRegionTobey","colorPropTobey","mostRecentNameLiveTobey","mostRecentDateLiveTobey","mostRecentSubmitterLiveTobey","mostRecentIntegrationTypeLiveTobey","mostRecentTierLiveTobey","mostRecentShortnameLiveTobey","mostRecentWebTypeLiveTobey","mostRecentCompanyRegionLiveTobey","colorPropLiveTobey","mostRecentNameJohnny","mostRecentDateJohnny","mostRecentSubmitterJohnny","mostRecentBuilderJohnny","mostRecentTierJohnny","mostRecentShortnameJohnny","mostRecentWebTypeJohnny","mostRecentCompanyRegionJohnny","colorPropJohnny","mostRecentNameLiveJohnny","mostRecentDateLiveJohnny","mostRecentSubmitterLiveJohnny","mostRecentIntegrationTypeLiveJohnny","mostRecentTierLiveJohnny","mostRecentShortnameLiveJohnny","mostRecentWebTypeLiveJohnny","mostRecentCompanyRegionLiveJohnny","colorPropLiveJohnny","teamLead","neubs","loadOBRecords","components_LoadingSpinner","components_Integrator","Boolean","window","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.674b795f.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../airtable-logo.png';\nimport styled from 'styled-components';\nimport './App.css';\n\nconst SpinnerContainer = styled.div`\n  width:100%;\n  height:100vh;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n`;\n\n    const LoadingSpinner = () => (\n      <SpinnerContainer>\n        <h1>Loading Data...</h1>\n        <img className=\"logo-loading\" src={logo} />\n      </SpinnerContainer>\n    );\n\n    export default LoadingSpinner;","import React, {Component} from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport './App.css';\n\nclass Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData:props.chartData,\n    }\n  }\n\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'right',\n    location:'City'\n  }\n\n  render(){\n    return (\n      <div className=\"chart\">\n        <Bar\n          height={null}\n          width={null}\n          data={this.props.chartData}\n          options={{\n            aspectRatio:1.1,\n            responsive:true,\n            maintainAspectRatio: false,\n            \n                \n            title:{\n              display:this.props.displayTitle,\n              text:'Tiers Completed For '+this.props.tierType+' Requests',\n              fontSize:18,\n              fontColor: 'rgb(40,44,52)',\n\n              \n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:this.props.legendPosition,\n              labels: {\n                  boxWidth:0,\n                  fontColor: 'rgb(40,44,52)',\n                  FontSize: 14\n                  \n              }\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Chart from './Chart';\n\n\n\nconst CompletedContainer = styled.div`\n    width:100%;\n    height:25%;\n    display:flex;\n    flex-direction: row;\n    border-color:#282c34;\n    \n`;\n\nconst NumberContainer = styled.div`\n    width:33%;\n    height:100%;\n    margin-top:-5%;\n    @media (max-width: 1500px) {\n    margin-top:-10%;\n  }\n`;\n\nconst CompletedNumber = styled.h1`\n    color:#282c34;\n    font-size:2.5rem;\n    @media (max-width: 1500px) {\n    font-size:2.25rem;\n    margin-top:25%;\n  }\n`;\n\nconst CompletedText = styled.h2`\n    color:#282c34;\n    font-size:1rem;\n    padding:10px;\n    margin-top:-3vh;\n    @media (max-width: 1500px) {\n    font-size:.75rem;\n   \n  }\n`;\n\nconst CompanyContainer = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n    flex-direction: column;\n    justify-content:center;\n    align-items:stretch;\n    margin-top:-10%;\n`;\n\nconst CompanyHeader = styled.div`\n    width:100%;\n    height:30%;\n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    align-items:center;\n`;\n\nconst CompanyHeading = styled.h1`\n    font-size:1rem;\n    color:#282c34;\n    @media (max-width: 1500px) {\n    font-size:.75rem;\n   \n  }\n`;\n\nconst CompanySubheading = styled.h2`\n    font-size:1.35rem;\n    color:#282c34;\n    margin-top:-.75vh;\n    @media (max-width: 1500px) {\n    font-size:1rem;\n   \n  }\n`;\n\nconst InfoContainer = styled.div`\n    width:100%;\n    height:70%;\n    display:flex;\n    flex-direction:row;\n    justify-content:center;\n    align-items:center;\n    margin-top:10%;\n    @media (max-width: 1500px) {\n        margin-top:2%;\n   \n  }\n`;\n\nconst InfoRight = styled.div`\n    width:50%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    \n`;\n\nconst InfoLeft = styled.div`\n    width:50%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n`;\n\nconst InfoText = styled.p`\n    font-size:.85rem;\n    color:#282c34;\n    font-weight:600;\n    padding:5px;\n    @media (max-width: 1500px) {\n    font-size:.75rem;\n   \n  }\n`;\n\nconst CompanyLocation = styled.h3`\n    font-size:1rem;\n    color:#282c34;\n    margin-top:.75vh;\n    display:inline-block;\n    border-radius:300px;\n    padding: 5px 15px 5px 15px;\n    background:${props => props.color};\n    width:max-content;\n    @media (max-width: 1500px) {\n    font-size:.75rem;\n   \n  }\n`;\n\nconst marginLeft = {\n    marginLeft:'2.5%'\n};\n\n\n\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData:{},\n            chartDataLive:{},\n        \n          }\n    }\n    \n    componentDidMount(){\n        this.getChartData();\n        console.log(this.props.tier0)\n        \n      }\n\n      \n\n      getChartData(){\n          \n          \n        // Ajax calls here\n        this.setState({\n          chartData:{\n            labels: ['Tier 0', 'Tier 1', ' Tier 2', 'Tier 3', 'Tier 4'],\n            datasets:[\n              {\n                label: 'Tiers',\n                data:[\n                  this.props.tier0,\n                  this.props.tier1,\n                  this.props.tier2,\n                  this.props.tier3,\n                  this.props.tier4\n                ],\n                backgroundColor:[\n                  'rgb(175, 132, 249)',\n                  'rgb(255, 210, 102)',\n                  'rgb(96, 175, 100)',\n                  'rgb(229, 131, 84)',\n                  'rgb(226, 129, 202)'\n                ]\n              }\n            ]\n          },\n          chartDataLive:{\n            labels: ['Tier 0', 'Tier 1', ' Tier 2', 'Tier 3', 'Tier 4'],\n            datasets:[\n              {\n                label: 'Tiers',\n                data:[\n                  this.props.tier0Live,\n                  this.props.tier1Live,\n                  this.props.tier2Live,\n                  this.props.tier3Live,\n                  this.props.tier4Live\n                ],\n                backgroundColor:[\n                    'rgb(175, 132, 249)',\n                    'rgb(255, 210, 102)',\n                    'rgb(96, 175, 100)',\n                    'rgb(229, 131, 84)',\n                    'rgb(226, 129, 202)'\n                ]\n              }\n            ]\n          }\n        });\n      }\n      \n  render() {\n    console.log(this.props.mostRecentNameLive);\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }\n    \n    return (\n        \n        <div className=\"modal\">\n        <div className=\"modal-card\">\n            <div className=\"left-column\">\n                <div className=\"row-one\">\n                <h3>OB Integration Requests</h3>\n                    <CompletedContainer>\n                        <NumberContainer>\n                            <CompletedNumber>{this.props.monthly}</CompletedNumber>\n                            <CompletedText>Integrations Completed This Month</CompletedText>\n                        </NumberContainer>\n                        <NumberContainer>\n                            <CompletedNumber>{this.props.total}</CompletedNumber>\n                            <CompletedText>Total Integrations Completed</CompletedText>\n                        </NumberContainer>\n                        <NumberContainer>\n                            <CompletedNumber>{this.props.daily}</CompletedNumber>\n                            <CompletedText>Integrations Completed Today</CompletedText>\n                        </NumberContainer>\n                    </CompletedContainer>\n                </div>\n                <div className=\"row-two-left\">\n                    <CompanyContainer>\n                        <CompanyHeader>\n                            <CompanyHeading>Last Company Integrated:</CompanyHeading>\n                            <CompanySubheading>{this.props.recentName}</CompanySubheading>\n                            <CompanyLocation color={this.props.colorProp}>{this.props.mostRecentCompanyRegion}</CompanyLocation>\n                        </CompanyHeader>\n                        <InfoContainer>\n                            <InfoLeft>\n                                <InfoText>Completion date: {this.props.recentDate}</InfoText>\n                                <InfoText>Submitted by: {this.props.recentSubmitter}</InfoText>\n                                <InfoText>Dashboard Builder: {this.props.recentBuilder}</InfoText>\n                            </InfoLeft>\n                            <InfoRight>\n                                <InfoText>Tier: {this.props.recentTier}</InfoText>\n                                <InfoText>Shortname: {this.props.recentShortname}</InfoText>\n                                <InfoText>Web type: {this.props.recentWebType}</InfoText>\n                            </InfoRight>\n                        </InfoContainer>\n                    </CompanyContainer>\n                </div>\n                <div className=\"row-three-left\">\n                    <div className=\"chart-container\">\n                        <Chart chartData={this.state.chartData} tierType=\"OB\" legendPosition=\"bottom\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"middle-column\">\n                <div className=\"top-row\">\n                    <h2>{this.props.name}</h2>\n                    <img className=\"modal-picture\" src={this.props.image} />\n                   \n                    <button className=\"close-button\" onClick={this.props.onClose} >Close</button>\n                    <h3>{this.props.title}</h3>\n                </div>\n                <div className=\"bottom-row\">\n                    <h5>Slack Name: {this.props.slack}</h5>\n                    <h5>TimeZone: {this.props.timezone}</h5>\n                    <h5>Phone Number: {this.props.phone}</h5>\n                    <h5>Email: {this.props.email} </h5>\n                    <h5>Office: {this.props.office}</h5>\n                    <h5>Manager: {this.props.manager}</h5>\n                </div>\n            </div>\n            <div className=\"right-column\">\n                <div className=\"row-one\">\n                <h3>Live Integration Requests</h3>\n                <CompletedContainer>\n                    <NumberContainer>\n                        <CompletedNumber>{this.props.monthlyLive}</CompletedNumber>\n                        <CompletedText>Integrations Completed This Month</CompletedText>\n                    </NumberContainer>\n                    <NumberContainer>\n                        <CompletedNumber>{this.props.totalLive}</CompletedNumber>\n                        <CompletedText>Total Integrations Completed</CompletedText>\n                    </NumberContainer>\n                    <NumberContainer>\n                    <CompletedNumber>{this.props.dailyLive}</CompletedNumber>\n                    <CompletedText>Integrations Completed Today</CompletedText>\n                    </NumberContainer>\n                </CompletedContainer>\n                </div>\n                <div className=\"row-two-right\">\n                <CompanyContainer>\n                    <CompanyHeader>\n                            <CompanyHeading>Last Company Integrated:</CompanyHeading>\n                            <CompanySubheading>{this.props.mostRecentNameLive}</CompanySubheading>\n                            <CompanyLocation color={this.props.colorPropLive}>{this.props.mostRecentCompanyRegionLive}</CompanyLocation>\n                        </CompanyHeader>\n                        <InfoContainer>\n                            <InfoLeft>\n                                <InfoText>Completion date: {this.props.mostRecentDateLive}</InfoText>\n                                <InfoText>Submitted by: {this.props.mostRecentSubmitterLive}</InfoText>\n                                <InfoText>Integration Type: {this.props.mostRecentIntegrationTypeLive}</InfoText>\n                            </InfoLeft>\n                            <InfoRight>\n                                <InfoText>Tier: {this.props.mostRecentTierLive}</InfoText>\n                                <InfoText>Shortname: {this.props.mostRecentShortnameLive}</InfoText>\n                                <InfoText>Web type: {this.props.mostRecentWebTypeLive}</InfoText>\n                            </InfoRight>\n                        </InfoContainer>\n                    </CompanyContainer>\n                </div>\n                <div className=\"row-three-right\">\n                    <div style={marginLeft} className=\"chart-container\">\n                        <Chart  chartData={this.state.chartDataLive} tierType=\"Live\" legendPosition=\"bottom\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Modal;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst CompletedContainer = styled.div`\n    width:100%;\n    height:25%;\n    display:flex;\n    flex-direction: row;\n    border-bottom: solid 2px;\n    border-color:#282c34;\n    @media (max-width: 1500px) {\n    font-size:2rem;\n    height:22.5%;\n  }\n`;\n\nconst NumberContainer = styled.div`\n    width:33%;\n    height:100%;\n`;\n\nconst CompletedNumber = styled.h1`\n    color:#282c34;\n    font-size:2.25rem;\n    @media (max-width: 1500px) {\n    font-size:2rem;\n    \n  }\n`;\n\nconst CompletedText = styled.h2`\n    color:#282c34;\n    font-size:.75rem;\n    padding:10px;\n    margin-top:-3vh;\n`;\n\nclass Completed extends Component {\n \nrender() {\n   \n    return (\n      <CompletedContainer>\n          \n          <NumberContainer>\n            <CompletedNumber>{this.props.monthly}</CompletedNumber>\n            <CompletedText>Integrations Completed This Month</CompletedText>\n          </NumberContainer>\n          <NumberContainer>\n            <CompletedNumber>{this.props.total}</CompletedNumber>\n            <CompletedText>Total Integrations Completed</CompletedText>\n          </NumberContainer>\n          <NumberContainer>\n          <CompletedNumber>{this.props.daily}</CompletedNumber>\n          <CompletedText>Integrations Completed Today</CompletedText>\n          </NumberContainer>\n      </CompletedContainer>\n    )\n  }\n}\n\nexport default Completed;","import React, { Component } from 'react'\nimport styled from 'styled-components';\n\n\nconst CompanyContainer = styled.div`\n    width:100%;\n    height:41%;\n    display:flex;\n    flex-direction: column;\n    justify-content:center;\n    align-items:stretch;\n`;\n\nconst CompanyHeader = styled.div`\n    width:100%;\n    height:40%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:flex-start;\n`;\n\nconst CompanyHeading = styled.h1`\n    font-size:.75rem;\n    color:#282c34;\n`;\n\nconst CompanySubheading = styled.h2`\n    font-size:1rem;\n    color:#282c34;\n    margin-top:-.75vh;\n`;\n\nconst CompanyLocation = styled.h3`\n    font-size:.85rem;\n    color:#282c34;\n    margin-top:.75vh;\n    display:inline-block;\n    border-radius:300px;\n    padding: 2px 10px 2px 10px;\n    background: ${props => props.color};\n    width:max-content;\n`;\n\nconst InfoContainer = styled.div`\n    width:100%;\n    height:60%;\n    display:flex;\n    flex-direction:row;\n    justify-content:center;\n    align-items:center;\n    @media (max-width: 1500px) {\n    margin-top:10%;\n    \n  }\n`;\n\nconst InfoRight = styled.div`\n    width:50%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n`;\n\nconst InfoLeft = styled.div`\n    width:50%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n`;\n\nconst InfoText = styled.p`\n    font-size:.85rem;\n    color:#282c34;\n    font-weight:600;\n    padding:5px;\n`;\n\nclass CompanyInfo extends Component {\n    \n  render() {\n    console.log(this.props.colorProp);\n \n    return (\n      <CompanyContainer>\n          <CompanyHeader>\n            <CompanyHeading>Last Company Integrated:</CompanyHeading>\n            <CompanySubheading>{this.props.mostRecentName}</CompanySubheading>\n            <CompanyLocation color={this.props.colorProp}>{this.props.mostRecentCompanyRegion}</CompanyLocation>\n          </CompanyHeader>\n        <InfoContainer>\n            <InfoLeft>\n                <InfoText>Completion date: {this.props.mostRecentDate}</InfoText>\n                <InfoText>Submitted by: {this.props.mostRecentSubmitter}</InfoText>\n                <InfoText>Dashboard Builder: {this.props.mostRecentBuilder}</InfoText>\n            </InfoLeft>\n            <InfoRight>\n                <InfoText>Tier: {this.props.mostRecentTier}</InfoText>\n                <InfoText>Shortname: {this.props.mostRecentShortname}</InfoText>\n                <InfoText>Web type: {this.props.mostRecentWebType}</InfoText>\n            </InfoRight>\n        </InfoContainer>\n       \n      </CompanyContainer>\n    )\n  }\n}\n\nexport default CompanyInfo;","import React, { Component, useState } from 'react'\nimport './App.css';\nimport styled from 'styled-components';\nimport Modal from './Modal';\nimport Completed from './Completed';\nimport CompanyInfo from './CompanyInfo';\n\n\n\n\n\nconst IntegratorContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items: center;\n    justify-content: flex-start;\n    width: 23vw;\n    margin-right:2%;\n    margin-left:2%;\n    margin-top:2%;\n    background-color:white;\n    height: 65vh;\n    border-radius:8px;\n    box-shadow: 2px 3px 12px 2px hsla(0, 0%, 0%, 0.3);\n    transition: .4s all ease-in-out;\n    :hover {\n      background-color:#ffbf00;\n      cursor: pointer;\n  }\n  @media (max-width: 1500px) {\n    width: 30vw;\n    height: 70vh;\n  }\n  `;\n\n  const Header = styled.div`\n     height:30%;\n     width:100%;\n    border-bottom: solid 2px;\n    border-color:#282c34;\n    @media (max-width: 1500px) {\n    height:27.5%;\n  }\n  `;\n\n  const IntegratorName = styled.h3`\n    color:#282c34;\n    font-size:1.5rem;\n    margin-bottom:3%;\n  `;\n\nclass Integrator extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isOpen: false\n      }\n    }\n\n  toggleModal = () => {\n   {this.state.isOpen ===false ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'inherit'}\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n render() {\n    console.log(this.props.tier0Live);\n    return (\n        \n        <IntegratorContainer onClick={this.toggleModal} >\n          <Header>\n            <img className=\"picture\" src={this.props.image} alt=\"integrator-profile\"/>\n              <IntegratorName>{this.props.name}</IntegratorName>\n          </Header>\n         \n          <Completed monthly={this.props.monthly} total={this.props.total} daily={this.props.daily}/>\n\n          <CompanyInfo mostRecentName={this.props.mostRecentName} mostRecentDate={this.props.mostRecentDate} mostRecentSubmitter={this.props.mostRecentSubmitter} \n          mostRecentBuilder={this.props.mostRecentBuilder} \n              mostRecentTier={this.props.mostRecentTier} mostRecentShortname={this.props.mostRecentShortname} mostRecentWebType={this.props.mostRecentWebType}\n              mostRecentCompanyRegion={this.props.mostRecentCompanyRegion} colorProp={this.props.colorProp}/>\n\n              <Modal name={this.props.name} monthly = {this.props.monthly} monthlyLive={this.props.monthlyLive} \n              daily={this.props.daily} dailyLive={this.props.dailyLive} total={this.props.total} \n              totalLive={this.props.totalLive} image={this.props.image} title={this.props.title}\n              slack={this.props.slack} timezone={this.props.timezone} phone={this.props.phone} email={this.props.email}\n              office={this.props.office} manager={this.props.manager} show={this.state.isOpen} onClose={this.toggleModal}\n              recentName={this.props.mostRecentName} recentDate={this.props.mostRecentDate} recentSubmitter={this.props.mostRecentSubmitter} \n              recentBuilder={this.props.mostRecentBuilder} recentTier={this.props.mostRecentTier} recentShortname={this.props.mostRecentShortname} \n              recentWebType={this.props.mostRecentWebType}  mostRecentCompanyRegion={this.props.mostRecentCompanyRegion} colorProp={this.props.colorProp}\n              mostRecentNameLive={this.props.mostRecentNameLive} mostRecentDateLive={this.props.mostRecentDateLive} mostRecentSubmitterLive={this.props.mostRecentSubmitterLive}\n              mostRecentIntegrationTypeLive={this.props.mostRecentIntegrationTypeLive} mostRecentTierLive={this.props.mostRecentTierLive} mostRecentShortnameLive={this.props.mostRecentShortnameLive}\n              mostRecentWebTypeLive={this.props.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.props.mostRecentCompanyRegionLive}tier0={this.props.tier0} tier1={this.props.tier1} \n              colorPropLive={this.props.colorPropLive} tier2={this.props.tier2} tier3={this.props.tier3} tier4={this.props.tier4}\n              tier0Live={this.props.tier0Live} tier1Live={this.props.tier1Live} \n              tier2Live={this.props.tier2Live} tier3Live={this.props.tier3Live} tier4Live={this.props.tier4Live}/>  \n           \n        </IntegratorContainer>\n    \n      \n    )\n  }\n}\n\nexport default Integrator;","import React, { Component } from 'react';\nimport logo from '../airtable-logo.png';\nimport './App.css';\nimport styled from 'styled-components';\nimport LoadingSpinner from './LoadingSpinner';\nimport moment from 'moment';\nimport patrickImage from '../fh-patrick.jpg';\nimport neubsImage from '../alex-neubauer.jpeg';\nimport amaiaImage from '../amaia-ibarra.jpeg';\nimport marcoImage from '../marco.png';\nimport zackImage from '../zack.jpeg';\nimport ellyImage from '../elly.jpg';\nimport tobeyImage from '../tobey.jpg';\nimport johnnyImage from '../johnny.png';\nimport Integrator from './Integrator';\n\nrequire(\"dotenv\").config({ path: \"../../../.env\"});\n\nconst AppContainer = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    justify-content:center;\n    align-items:center;\n    margin-top:20px;\n    margin-bottom:30px;\n`;\n\nconst MainHeading = styled.h1`\n  font-size:2.25rem;\n  display:inline-block;\n  margin-left:10px;\n  margin-bottom:20px;\n  color:white;\n`;\n\nconst Container = styled.div`\n  display:flex;\n  flex-direction:column;\n  margin:10px;\n  margin-top:10px;\n`;\n\nconst apiKey = process.env.REACT_APP_AIRTABLE_KEY;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading:true,\n     \n      patrick: {\n        records: {\n          total: 0,\n          monthly: 0,\n          daily: 0,\n          mostRecentName: '',\n          mostRecentDate: '',\n          mostRecentSubmitter: '',\n          mostRecentBuilder: '',\n          mostRecentTier: '',\n          mostRecentShortname: '',\n          mostRecentWebType: '',\n          tier0: 0,\n          tier1: 0,\n          tier2: 0,\n          tier3: 0,\n          tier: 0,\n        },\n        live: {\n          total: 0,\n          monthly: 0,\n          daily: 0,\n          mostRecentName: '',\n          mostRecentDate: '',\n          mostRecentSubmitter: '',\n          integrationType: '',\n          mostRecentTier: '',\n          mostRecentShortname: '',\n          mostRecentWebType: '',\n          tier0: 0,\n          tier1: 0,\n          tier2: 0,\n          tier3: 0,\n          tier: 0,\n        },\n        info:{\n          name: 'Patrick Poole',\n          image: patrickImage,\n          title: 'Integrations Specialist',\n          slack: 'patrick',\n          timezone: 'Mountain',\n          phone: '303-888-8909',\n          email: 'patrick.poole@fareharbor.com',\n          office: 'Denver',\n          manager: 'Neubs/Raleigh'\n        }\n      },\n    \n    nuebs: {\n      records: {\n        total: 0,\n        monthly: 0,\n        daily: 0,\n        mostRecentName: '',\n        mostRecentDate: '',\n        mostRecentSubmitter: '',\n        mostRecentBuilder: '',\n        mostRecentTier: '',\n        mostRecentShortname: '',\n        mostRecentWebType: '',\n        tier0: 0,\n        tier1: 0,\n        tier2: 0,\n        tier3: 0,\n        tier: 0,\n      },\n      live: {\n        total: 0,\n        monthly: 0,\n        daily: 0,\n        mostRecentName: '',\n        mostRecentDate: '',\n        mostRecentSubmitter: '',\n        integrationType: '',\n        mostRecentTier: '',\n        mostRecentShortname: '',\n        mostRecentWebType: '',\n        tier0: 0,\n        tier1: 0,\n        tier2: 0,\n        tier3: 0,\n        tier: 0,\n      },\n      info:{\n        name: 'Alex Neubauer',\n        image: neubsImage,\n        title: 'Enterprise Integrations',\n        slack: 'neubs',\n        timezone: 'Mountain',\n        phone: '615-354-4808',\n        email: 'alex@fareharbor.com',\n        office: 'Denver',\n        manager: 'Raleigh Caruso'\n      }\n    },\n    zack: {\n      records: {\n        total: 0,\n        monthly: 0,\n        daily: 0,\n        mostRecentName: '',\n        mostRecentDate: '',\n        mostRecentSubmitter: '',\n        mostRecentBuilder: '',\n        mostRecentTier: '',\n        mostRecentShortname: '',\n        mostRecentWebType: '',\n        tier0: 0,\n        tier1: 0,\n        tier2: 0,\n        tier3: 0,\n        tier: 0,\n      },\n      live: {\n        total: 0,\n        monthly: 0,\n        daily: 0,\n        mostRecentName: '',\n        mostRecentDate: '',\n        mostRecentSubmitter: '',\n        integrationType: '',\n        mostRecentTier: '',\n        mostRecentShortname: '',\n        mostRecentWebType: '',\n        tier0: 0,\n        tier1: 0,\n        tier2: 0,\n        tier3: 0,\n        tier: 0,\n      },\n      info:{\n        name: 'Zack Feld',\n        image: zackImage,\n        title: 'Special Big Helper',\n        slack: 'zackf',\n        timezone: 'Mountain',\n        phone: '847-912-1215',\n        email: 'zack@fareharbor.com',\n        office: 'Denver',\n        manager: 'Mark Loh'\n      }\n    },\n  marco: {\n    records: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      mostRecentBuilder: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    live: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      integrationType: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    info:{\n      name: 'Marco Depperu',\n      image: marcoImage,\n      title: 'Integrations Specialist',\n      slack: 'mdepperu',\n      timezone: 'Central European Summer Time',\n      phone: '0686423460',\n      email: 'marco.depperu@fareharbor.com',\n      office: 'Amsterdam',\n      manager: 'Michael Klempner'\n    }\n  },\n  amaia: {\n    records: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      mostRecentBuilder: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    live: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      integrationType: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    info:{\n      name: 'Amaia Ibarra',\n      image: amaiaImage,\n      title: 'Integrations Specialist',\n      slack: 'amaia',\n      timezone: 'Central European Summer Time',\n      phone: '34615711333',\n      email: 'amaia.ibarra@fareharbor.com',\n      office: 'Amsterdam',\n      manager: 'Michael Klempner'\n    }\n  },\n  elly: {\n    records: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      mostRecentBuilder: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    live: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      integrationType: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    info:{\n      name: 'Nallely Torres',\n      image: ellyImage,\n      title: 'Integrations Specialist',\n      slack: 'elly',\n      timezone: 'Mountain',\n      phone: '720-380-3867',\n      email: 'nallely.torres@fareharbor.com',\n      office: 'Denver',\n      manager: 'Neubs'\n    }\n  },\n  tobey: {\n    records: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      mostRecentBuilder: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    live: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      integrationType: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    info:{\n      name: 'Tobey Ross',\n      image: tobeyImage,\n      title: 'Integrations Specialist',\n      slack: 'tobez',\n      timezone: 'Mountain',\n      phone: '512-529-6783',\n      email: 'tobey.ross@fareharbor.com',\n      office: 'Denver',\n      manager: 'Neubs'\n    }\n  },\n  johnny: {\n    records: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      mostRecentBuilder: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    live: {\n      total: 0,\n      monthly: 0,\n      daily: 0,\n      mostRecentName: '',\n      mostRecentDate: '',\n      mostRecentSubmitter: '',\n      integrationType: '',\n      mostRecentTier: '',\n      mostRecentShortname: '',\n      mostRecentWebType: '',\n      tier0: 0,\n      tier1: 0,\n      tier2: 0,\n      tier3: 0,\n      tier: 0,\n    },\n    info:{\n      name: 'Johnny Garcia',\n        image: johnnyImage,\n        title: 'Integrations Specialist',\n        slack: 'patrick',\n        timezone: 'Mountain',\n        phone: '303-888-8909',\n        email: 'patrick.poole@fareharbor.com',\n        office: 'Denver',\n        manager: 'Raleigh Caruso',\n        manager: 'Neubs'\n    }\n  }\n  }\n}\n\ncomponentDidMount() {\n  const idArray = [\n    'rec4sRpMUGLTGahXW',\n    'recFfOW7iuzI6a8cb',\n    'recbMjoumd8cb6pQg',\n    'recV6fVqabawVDGuZ',\n    'recUKD8ue91sXjx0x',\n    'recvnh0fRFsGvqPYx',\n    'recGu8dqcUNmX7Lsx',\n    'recjAF0GGGahIkwti',\n    'recfDa2Zeu940sdpA'\n  ];\n\n  let today = new Date();\n  let day = today.getDate();\n    \n  let month = today.getMonth();\n  month = month+1;\n  let year = today.getFullYear();\n   \n  // Adds 0 to single digit days and months\n  if (month < 10){\n    month = \"0\"+month;\n  }\n  \n  if (day < 10) {\n    day = \"0\"+day;\n  }   \n  \n  const date = `${year}-${month}-${day}`;\n\n  const Airtable = require('airtable');\n  \n  const base = new Airtable({ apiKey: apiKey }).base('app9VtXS1vJyLgLgK');\n\n  const loadOBRecords = () => {\n  let dailyIntegrationsArrayLive = [];\n  let totalIntegrationsArrayLive = [];\n  let monthlyIntegrationsArrayLive = [];\n\n  let dailyIntegrationsArrayLiveNeubs = [];\n  let totalIntegrationsArrayLiveNeubs = [];\n  let monthlyIntegrationsArrayLiveNeubs = [];\n\n  let dailyIntegrationsArrayLiveZack = [];\n  let totalIntegrationsArrayLiveZack = [];\n  let monthlyIntegrationsArrayLiveZack = [];\n\n  let dailyIntegrationsArrayLiveMarco = [];\n  let totalIntegrationsArrayLiveMarco = [];\n  let monthlyIntegrationsArrayLiveMarco = [];\n\n  let dailyIntegrationsArrayLiveAmaia = [];\n  let totalIntegrationsArrayLiveAmaia = [];\n  let monthlyIntegrationsArrayLiveAmaia = [];\n\n  let dailyIntegrationsArrayLiveElly = [];\n  let totalIntegrationsArrayLiveElly = [];\n  console.log(totalIntegrationsArrayLiveElly);\n  let monthlyIntegrationsArrayLiveElly = [];\n\n  let dailyIntegrationsArrayLiveTobey = [];\n  let totalIntegrationsArrayLiveTobey = [];\n  let monthlyIntegrationsArrayLiveTobey = [];\n\n  let dailyIntegrationsArrayLiveJohnny = [];\n  let totalIntegrationsArrayLiveJohnny = [];\n  let monthlyIntegrationsArrayLiveJohnny = [];\n\n  let companyArrayLive = [];          \n  let completionDateArrayLive = [];\n  let submitterArrayLive = [];\n  let integrationTypeArrayLive = [];\n  let tierArrayLive = [];\n  let shortnameArrayLive = [];\n  let webTypeArrayLive = [];\n  let companyRegionArrayLive = [];\n\n  let companyArrayLiveNeubs = [];          \n  let completionDateArrayLiveNeubs = [];\n  let submitterArrayLiveNeubs = [];\n  let integrationTypeArrayLiveNeubs = [];\n  let tierArrayLiveNeubs = [];\n  let shortnameArrayLiveNeubs = [];\n  let webTypeArrayLiveNeubs = [];\n  let companyRegionArrayLiveNeubs = [];\n\n  let companyArrayLiveZack = [];          \n  let completionDateArrayLiveZack = [];\n  let submitterArrayLiveZack = [];\n  let integrationTypeArrayLiveZack = [];\n  let tierArrayLiveZack = [];\n  let shortnameArrayLiveZack = [];\n  let webTypeArrayLiveZack = [];\n  let companyRegionArrayLiveZack = [];\n\n  let companyArrayLiveMarco = [];          \n  let completionDateArrayLiveMarco = [];\n  let submitterArrayLiveMarco = [];\n  let integrationTypeArrayLiveMarco = [];\n  let tierArrayLiveMarco = [];\n  let shortnameArrayLiveMarco = [];\n  let webTypeArrayLiveMarco = [];\n  let companyRegionArrayLiveMarco = [];\n\n  let companyArrayLiveAmaia = [];          \n  let completionDateArrayLiveAmaia = [];\n  let submitterArrayLiveAmaia = [];\n  let integrationTypeArrayLiveAmaia = [];\n  let tierArrayLiveAmaia = [];\n  let shortnameArrayLiveAmaia = [];\n  let webTypeArrayLiveAmaia = [];\n  let companyRegionArrayLiveAmaia = [];\n\n  let companyArrayLiveElly = [];          \n  let completionDateArrayLiveElly = [];\n  let submitterArrayLiveElly = [];\n  let integrationTypeArrayLiveElly = [];\n  let tierArrayLiveElly = [];\n  let shortnameArrayLiveElly = [];\n  let webTypeArrayLiveElly = [];\n  let companyRegionArrayLiveElly = [];\n\n  let companyArrayLiveTobey = [];          \n  let completionDateArrayLiveTobey = [];\n  let submitterArrayLiveTobey = [];\n  let integrationTypeArrayLiveTobey = [];\n  let tierArrayLiveTobey = [];\n  let shortnameArrayLiveTobey = [];\n  let webTypeArrayLiveTobey = [];\n  let companyRegionArrayLiveTobey = [];\n\n  let companyArrayLiveJohnny = [];          \n  let completionDateArrayLiveJohnny = [];\n  let submitterArrayLiveJohnny = [];\n  let integrationTypeArrayLiveJohnny = [];\n  let tierArrayLiveJohnny = [];\n  let shortnameArrayLiveJohnny = [];\n  let webTypeArrayLiveJohnny = [];\n  let companyRegionArrayLiveJohnny = [];\n\n  let tier0Live = 0;\n  let tier1Live = 0;\n  let tier2Live = 0;\n  let tier3Live = 0;\n  let tier4Live = 0;\n\n  let tier0LiveNeubs = 0;\n  let tier1LiveNeubs = 0;\n  let tier2LiveNeubs = 0;\n  let tier3LiveNeubs = 0;\n  let tier4LiveNeubs = 0;\n\n  let tier0LiveZack = 0;\n  let tier1LiveZack = 0;\n  let tier2LiveZack = 0;\n  let tier3LiveZack = 0;\n  let tier4LiveZack = 0;\n\n  let tier0LiveMarco = 0;\n  let tier1LiveMarco = 0;\n  let tier2LiveMarco = 0;\n  let tier3LiveMarco = 0;\n  let tier4LiveMarco = 0;\n\n  let tier0LiveAmaia = 0;\n  let tier1LiveAmaia = 0;\n  let tier2LiveAmaia = 0;\n  let tier3LiveAmaia = 0;\n  let tier4LiveAmaia = 0;\n\n  let tier0LiveElly = 0;\n  let tier1LiveElly = 0;\n  let tier2LiveElly = 0;\n  let tier3LiveElly = 0;\n  let tier4LiveElly = 0;\n\n  let tier0LiveTobey = 0;\n  let tier1LiveTobey = 0;\n  let tier2LiveTobey = 0;\n  let tier3LiveTobey = 0;\n  let tier4LiveTobey = 0;\n\n  let tier0LiveJohnny = 0;\n  let tier1LiveJohnny  = 0;\n  let tier2LiveJohnny  = 0;\n  let tier3LiveJohnny  = 0;\n  let tier4LiveJohnny  = 0;\n\n  let totalRecordsLive = [];\n  let totalRecordsLiveNeubs = [];\n  let totalRecordsLiveZack = [];\n  let totalRecordsLiveMarco = [];\n  let totalRecordsLiveAmaia = [];\n  let totalRecordsLiveElly = [];\n  let totalRecordsLiveTobey = [];\n  let totalRecordsLiveJohnny = [];\n           \n  base('Live Integration Requests').select({\n      sort: [\n          {field: 'Completion Date', direction: 'asc'}\n      ]\n  }).eachPage(function page(records, fetchNextPage) {\n      records.forEach(function(record) {\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[0]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLive.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Live++;\n                  break;\n                case '1':\n                  tier1Live++;\n                  break;\n                case '2':\n                  tier2Live++;\n                  break;\n                case '3':\n                  tier3Live++;\n                  break;\n                case '4':\n                  tier4Live++;\n                  break;\n              }\n            }\n\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLive.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLive.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLive.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLive[totalRecordsLive.length - 1].fields['Company Region'];\n            \n            companyArrayLive.push(lastItemNameLive);\n            completionDateArrayLive.push(lastItemDateFormattedLive);\n            submitterArrayLive.push(lastItemSubmitterLive);\n            integrationTypeArrayLive.push(lastItemIntegrationTypeLive);\n            tierArrayLive.push(lastItemTierLive);\n            shortnameArrayLive.push(lastItemShortnameLive);\n            webTypeArrayLive.push(lastItemWebTypeLive);\n            companyRegionArrayLive.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[1]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveNeubs.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveNeubs++;\n                  break;\n                case '1':\n                  tier1LiveNeubs++;\n                  break;\n                case '2':\n                  tier2LiveNeubs++;\n                  break;\n                case '3':\n                  tier3LiveNeubs++;\n                  break;\n                case '4':\n                  tier4LiveNeubs++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveNeubs.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveNeubs.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveNeubs.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveNeubs[totalRecordsLiveNeubs.length - 1].fields['Company Region'];\n            \n            companyArrayLiveNeubs.push(lastItemNameLive);\n            completionDateArrayLiveNeubs.push(lastItemDateFormattedLive);\n            submitterArrayLiveNeubs.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveNeubs.push(lastItemIntegrationTypeLive);\n            tierArrayLiveNeubs.push(lastItemTierLive);\n            shortnameArrayLiveNeubs.push(lastItemShortnameLive);\n            webTypeArrayLiveNeubs.push(lastItemWebTypeLive);\n            companyRegionArrayLiveNeubs.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[2]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveZack.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveZack++;\n                  break;\n                case '1':\n                  tier1LiveZack++;\n                  break;\n                case '2':\n                  tier2LiveZack++;\n                  break;\n                case '3':\n                  tier3LiveZack++;\n                  break;\n                case '4':\n                  tier4LiveZack++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveZack.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveZack.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveZack.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveZack[totalRecordsLiveZack.length - 1].fields['Company Region'];\n            \n            companyArrayLiveZack.push(lastItemNameLive);\n            completionDateArrayLiveZack.push(lastItemDateFormattedLive);\n            submitterArrayLiveZack.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveZack.push(lastItemIntegrationTypeLive);\n            tierArrayLiveZack.push(lastItemTierLive);\n            shortnameArrayLiveZack.push(lastItemShortnameLive);\n            webTypeArrayLiveZack.push(lastItemWebTypeLive);\n            companyRegionArrayLiveZack.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[3]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveMarco.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveMarco++;\n                  break;\n                case '1':\n                  tier1LiveMarco++;\n                  break;\n                case '2':\n                  tier2LiveMarco++;\n                  break;\n                case '3':\n                  tier3LiveMarco++;\n                  break;\n                case '4':\n                  tier4LiveMarco++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveMarco.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveMarco.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveMarco.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveMarco[totalRecordsLiveMarco.length - 1].fields['Company Region'];\n            \n            companyArrayLiveMarco.push(lastItemNameLive);\n            completionDateArrayLiveMarco.push(lastItemDateFormattedLive);\n            submitterArrayLiveMarco.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveMarco.push(lastItemIntegrationTypeLive);\n            tierArrayLiveMarco.push(lastItemTierLive);\n            shortnameArrayLiveMarco.push(lastItemShortnameLive);\n            webTypeArrayLiveMarco.push(lastItemWebTypeLive);\n            companyRegionArrayLiveMarco.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[4]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveAmaia.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveAmaia++;\n                  break;\n                case '1':\n                  tier1LiveAmaia++;\n                  break;\n                case '2':\n                  tier2LiveAmaia++;\n                  break;\n                case '3':\n                  tier3LiveAmaia++;\n                  break;\n                case '4':\n                  tier4LiveAmaia++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveAmaia.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveAmaia.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveAmaia.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveAmaia[totalRecordsLiveAmaia.length - 1].fields['Company Region'];\n            \n            companyArrayLiveAmaia.push(lastItemNameLive);\n            completionDateArrayLiveAmaia.push(lastItemDateFormattedLive);\n            submitterArrayLiveAmaia.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveAmaia.push(lastItemIntegrationTypeLive);\n            tierArrayLiveAmaia.push(lastItemTierLive);\n            shortnameArrayLiveAmaia.push(lastItemShortnameLive);\n            webTypeArrayLiveAmaia.push(lastItemWebTypeLive);\n            companyRegionArrayLiveAmaia.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[5]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveElly.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveElly++;\n                  break;\n                case '1':\n                  tier1LiveElly++;\n                  break;\n                case '2':\n                  tier2LiveElly++;\n                  break;\n                case '3':\n                  tier3LiveElly++;\n                  break;\n                case '4':\n                  tier4LiveElly++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveElly.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveElly.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveElly.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveElly[totalRecordsLiveElly.length - 1].fields['Company Region'];\n            \n            companyArrayLiveElly.push(lastItemNameLive);\n            completionDateArrayLiveElly.push(lastItemDateFormattedLive);\n            submitterArrayLiveElly.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveElly.push(lastItemIntegrationTypeLive);\n            tierArrayLiveElly.push(lastItemTierLive);\n            shortnameArrayLiveElly.push(lastItemShortnameLive);\n            webTypeArrayLiveElly.push(lastItemWebTypeLive);\n            companyRegionArrayLiveElly.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[6]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveTobey.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveTobey++;\n                  break;\n                case '1':\n                  tier1LiveTobey++;\n                  break;\n                case '2':\n                  tier2LiveTobey++;\n                  break;\n                case '3':\n                  tier3LiveTobey++;\n                  break;\n                case '4':\n                  tier4LiveTobey++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveTobey.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveTobey.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveTobey.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveTobey[totalRecordsLiveTobey.length - 1].fields['Company Region'];\n\n            companyArrayLiveTobey.push(lastItemNameLive);\n            completionDateArrayLiveTobey.push(lastItemDateFormattedLive);\n            submitterArrayLiveTobey.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveTobey.push(lastItemIntegrationTypeLive);\n            tierArrayLiveTobey.push(lastItemTierLive);\n            shortnameArrayLiveTobey.push(lastItemShortnameLive);\n            webTypeArrayLiveTobey.push(lastItemWebTypeLive);\n            companyRegionArrayLiveTobey.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n        try {\n          if(record.fields['Claimed By:'][0] === idArray[7]) {\n            if(record.fields['Completion Date']) {\n              totalRecordsLiveJohnny.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0LiveJohnny++;\n                  break;\n                case '1':\n                  tier1LiveJohnny++;\n                  break;\n                case '2':\n                  tier2LiveJohnny++;\n                  break;\n                case '3':\n                  tier3LiveJohnny++;\n                  break;\n                case '4':\n                  tier4LiveJohnny++;\n                  break;\n              }\n            }\n            let completionDateLive = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayLiveJohnny.push(completionDateLive);\n              if(completionDateLive === date) {          \n                dailyIntegrationsArrayLiveJohnny.push(completionDateLive);\n              }\n              let completionMonthLive = completionDateLive.split('-')[1];\n              if(completionMonthLive === month) {\n                monthlyIntegrationsArrayLiveJohnny.push(completionDateLive);\n              }\n\n            let lastItemNameLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Company Name'];\n            let lastItemDateLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Completion Date'];\n            let lastItemDateFormattedLive = moment(lastItemDateLive).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitterLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Name of submitter'];\n            let lastItemIntegrationTypeLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Type of Integration Request'];\n            let lastItemTierLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Tier'];\n            let lastItemShortnameLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Shortname'];\n            let lastItemWebTypeLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Website Type'];\n            let lastCompanyRegionLive = totalRecordsLiveJohnny[totalRecordsLiveJohnny.length - 1].fields['Company Region'];\n            \n            companyArrayLiveJohnny.push(lastItemNameLive);\n            completionDateArrayLiveJohnny.push(lastItemDateFormattedLive);\n            submitterArrayLiveJohnny.push(lastItemSubmitterLive);\n            integrationTypeArrayLiveJohnny.push(lastItemIntegrationTypeLive);\n            tierArrayLiveJohnny.push(lastItemTierLive);\n            shortnameArrayLiveJohnny.push(lastItemShortnameLive);\n            webTypeArrayLiveJohnny.push(lastItemWebTypeLive);\n            companyRegionArrayLiveJohnny.push(lastCompanyRegionLive);\n          } \n        } catch(err) {\n          \n        }\n    });\n      fetchNextPage();\n  }, function done(error) {\n      console.log(error);\n});\n    \n    let dailyIntegrationsArray = [];\n    let totalIntegrationsArray = [];\n    let monthlyIntegrationsArray = [];\n    let companyArray = [];\n    let completionDateArray = [];\n    let submitterArray = [];\n    let builderArray = [];\n    let tierArray = [];\n    let shortnameArray = [];\n    let webTypeArray = [];\n    let companyRegionArray = [];\n\n    let dailyIntegrationsArrayNeubs = [];\n    let totalIntegrationsArrayNeubs = [];\n    let monthlyIntegrationsArrayNeubs = [];\n    let companyArrayNeubs = [];\n    let completionDateArrayNeubs = [];\n    let submitterArrayNeubs = [];\n    let builderArrayNeubs = [];\n    let tierArrayNeubs = [];\n    let shortnameArrayNeubs = [];\n    let webTypeArrayNeubs = [];\n    let companyRegionArrayNeubs = [];\n\n    let dailyIntegrationsArrayZack = [];\n    let totalIntegrationsArrayZack = [];\n    let monthlyIntegrationsArrayZack = [];\n    let companyArrayZack = [];\n    let completionDateArrayZack = [];\n    let submitterArrayZack = [];\n    let builderArrayZack = [];\n    let tierArrayZack = [];\n    let shortnameArrayZack = [];\n    let webTypeArrayZack = [];\n    let companyRegionArrayZack = [];\n\n    let dailyIntegrationsArrayMarco = [];\n    let totalIntegrationsArrayMarco = [];\n    let monthlyIntegrationsArrayMarco = [];\n    let companyArrayMarco = [];\n    let completionDateArrayMarco = [];\n    let submitterArrayMarco = [];\n    let builderArrayMarco = [];\n    let tierArrayMarco = [];\n    let shortnameArrayMarco = [];\n    let webTypeArrayMarco = [];\n    let companyRegionArrayMarco = [];\n\n    let dailyIntegrationsArrayAmaia = [];\n    let totalIntegrationsArrayAmaia = [];\n    let monthlyIntegrationsArrayAmaia = [];\n    let companyArrayAmaia = [];\n    let completionDateArrayAmaia = [];\n    let submitterArrayAmaia = [];\n    let builderArrayAmaia = [];\n    let tierArrayAmaia = [];\n    let shortnameArrayAmaia = [];\n    let webTypeArrayAmaia = [];\n    let companyRegionArrayAmaia = [];\n\n    let dailyIntegrationsArrayElly= [];\n    let totalIntegrationsArrayElly = [];\n    let monthlyIntegrationsArrayElly = [];\n    let companyArrayElly = [];\n    let completionDateArrayElly = [];\n    let submitterArrayElly = [];\n    let builderArrayElly = [];\n    let tierArrayElly = [];\n    let shortnameArrayElly = [];\n    let webTypeArrayElly = [];\n    let companyRegionArrayElly = [];\n\n    let dailyIntegrationsArrayTobey = [];\n    let totalIntegrationsArrayTobey = [];\n    let monthlyIntegrationsArrayTobey = [];\n    let companyArrayTobey = [];\n    let completionDateArrayTobey = [];\n    let submitterArrayTobey = [];\n    let builderArrayTobey = [];\n    let tierArrayTobey = [];\n    let shortnameArrayTobey = [];\n    let webTypeArrayTobey = [];\n    let companyRegionArrayTobey = [];\n\n    let dailyIntegrationsArrayJohnny = [];\n    let totalIntegrationsArrayJohnny = [];\n    let monthlyIntegrationsArrayJohnny = [];\n    let companyArrayJohnny = [];\n    let completionDateArrayJohnny = [];\n    let submitterArrayJohnny = [];\n    let builderArrayJohnny = [];\n    let tierArrayJohnny = [];\n    let shortnameArrayJohnny = [];\n    let webTypeArrayJohnny = [];\n    let companyRegionArrayJohnny = [];\n\n    let tier0 = 0;\n    let tier1 = 0;\n    let tier2 = 0;\n    let tier3 = 0;\n    let tier4 = 0;\n  \n    let tier0Neubs = 0;\n    let tier1Neubs = 0;\n    let tier2Neubs = 0;\n    let tier3Neubs = 0;\n    let tier4Neubs = 0;\n\n    let tier0Zack = 0;\n    let tier1Zack = 0;\n    let tier2Zack = 0;\n    let tier3Zack = 0;\n    let tier4Zack = 0;\n\n    let tier0Marco = 0;\n    let tier1Marco = 0;\n    let tier2Marco = 0;\n    let tier3Marco = 0;\n    let tier4Marco = 0;\n\n    let tier0Amaia = 0;\n    let tier1Amaia = 0;\n    let tier2Amaia = 0;\n    let tier3Amaia = 0;\n    let tier4Amaia = 0;\n\n    let tier0Elly = 0;\n    let tier1Elly = 0;\n    let tier2Elly = 0;\n    let tier3Elly = 0;\n    let tier4Elly = 0;\n\n    let tier0Tobey = 0;\n    let tier1Tobey = 0;\n    let tier2Tobey = 0;\n    let tier3Tobey = 0;\n    let tier4Tobey = 0;\n\n    let tier0Johnny = 0;\n    let tier1Johnny = 0;\n    let tier2Johnny = 0;\n    let tier3Johnny = 0;\n    let tier4Johnny = 0;\n\n    \n    let totalRecords = [];  \n    let totalRecordsNeubs = [];     \n    let totalRecordsZack = [];\n    let totalRecordsMarco = [];       \n    let totalRecordsAmaia = [];\n    let totalRecordsElly = []; \n    let totalRecordsTobey = [];\n    let totalRecordsJohnny = [];           \n    \n  \n      base('OB Integration Requests').select({\n          sort: [\n              {field: 'Completion Date', direction: 'asc'}\n          ]\n      }).eachPage(function page(records, fetchNextPage) {\n          records.forEach(function(record) {\n            //console.log(record);\n            try {\n                if(record.fields['Claimed By:'][0] === idArray[0]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecords.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0++;\n                  break;\n                case '1':\n                  tier1++;\n                  break;\n                case '2':\n                  tier2++;\n                  break;\n                case '3':\n                  tier3++;\n                  break;\n                case '4':\n                  tier4++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArray.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArray.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArray.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecords[totalRecords.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecords[totalRecords.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecords[totalRecords.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecords[totalRecords.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecords[totalRecords.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecords[totalRecords.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecords[totalRecords.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecords[totalRecords.length - 1].fields['Company Region'];\n            \n            companyArray.push(lastItemName);\n            completionDateArray.push(lastItemDateFormatted);\n            submitterArray.push(lastItemSubmitter);\n            builderArray.push(lastItemBuilder);\n            tierArray.push(lastItemTier);\n            shortnameArray.push(lastItemShortname);\n            webTypeArray.push(lastItemWebType);\n            companyRegionArray.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n              try {\n                if(record.fields['Claimed By:'][0] === idArray[1]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecordsNeubs.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Neubs++;\n                  break;\n                case '1':\n                  tier1Neubs++;\n                  break;\n                case '2':\n                  tier2Neubs++;\n                  break;\n                case '3':\n                  tier3Neubs++;\n                  break;\n                case '4':\n                  tier4Neubs++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayNeubs.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArrayNeubs.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArrayNeubs.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecordsNeubs[totalRecordsNeubs.length - 1].fields['Company Region'];\n            \n            companyArrayNeubs.push(lastItemName);\n            completionDateArrayNeubs.push(lastItemDateFormatted);\n            submitterArrayNeubs.push(lastItemSubmitter);\n            builderArrayNeubs.push(lastItemBuilder);\n            tierArrayNeubs.push(lastItemTier);\n            shortnameArrayNeubs.push(lastItemShortname);\n            webTypeArrayNeubs.push(lastItemWebType);\n            companyRegionArrayNeubs.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n              try {\n                if(record.fields['Claimed By:'][0] === idArray[2]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecordsZack.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Zack++;\n                  break;\n                case '1':\n                  tier1Zack++;\n                  break;\n                case '2':\n                  tier2Zack++;\n                  break;\n                case '3':\n                  tier3Zack++;\n                  break;\n                case '4':\n                  tier4Zack++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayZack.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArrayZack.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArrayZack.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecordsZack[totalRecordsZack.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecordsZack[totalRecordsZack.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecordsZack[totalRecordsZack.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecordsZack[totalRecordsZack.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecordsZack[totalRecordsZack.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecordsZack[totalRecordsZack.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecordsZack[totalRecordsZack.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecordsZack[totalRecordsZack.length - 1].fields['Company Region'];\n            \n            companyArrayZack.push(lastItemName);\n            completionDateArrayZack.push(lastItemDateFormatted);\n            submitterArrayZack.push(lastItemSubmitter);\n            builderArrayZack.push(lastItemBuilder);\n            tierArrayZack.push(lastItemTier);\n            shortnameArrayZack.push(lastItemShortname);\n            webTypeArrayZack.push(lastItemWebType);\n            companyRegionArrayZack.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n              try {\n                if(record.fields['Claimed By:'][0] === idArray[3]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecordsMarco.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Marco++;\n                  break;\n                case '1':\n                  tier1Marco++;\n                  break;\n                case '2':\n                  tier2Marco++;\n                  break;\n                case '3':\n                  tier3Marco++;\n                  break;\n                case '4':\n                  tier4Marco++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayMarco.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArrayMarco.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArrayMarco.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecordsMarco[totalRecordsMarco.length - 1].fields['Company Region'];\n            \n            companyArrayMarco.push(lastItemName);\n            completionDateArrayMarco.push(lastItemDateFormatted);\n            submitterArrayMarco.push(lastItemSubmitter);\n            builderArrayMarco.push(lastItemBuilder);\n            tierArrayMarco.push(lastItemTier);\n            shortnameArrayMarco.push(lastItemShortname);\n            webTypeArrayMarco.push(lastItemWebType);\n            companyRegionArrayMarco.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n              try {\n                if(record.fields['Claimed By:'][0] === idArray[4]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecordsAmaia.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Amaia++;\n                  break;\n                case '1':\n                  tier1Amaia++;\n                  break;\n                case '2':\n                  tier2Amaia++;\n                  break;\n                case '3':\n                  tier3Amaia++;\n                  break;\n                case '4':\n                  tier4Amaia++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayAmaia.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArrayAmaia.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArrayAmaia.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecordsAmaia[totalRecordsAmaia.length - 1].fields['Company Region'];\n            \n            \n            companyArrayAmaia.push(lastItemName);\n            completionDateArrayAmaia.push(lastItemDateFormatted);\n            submitterArrayAmaia.push(lastItemSubmitter);\n            builderArrayAmaia.push(lastItemBuilder);\n            tierArrayAmaia.push(lastItemTier);\n            shortnameArrayAmaia.push(lastItemShortname);\n            webTypeArrayAmaia.push(lastItemWebType);\n            companyRegionArrayAmaia.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n              try {\n            if(record.fields['Claimed By:'][0] === idArray[5]) {\n                  \n            if(record.fields['Completion Date']) {\n              if(record === records.length -1) {\n                console.log(record);\n              }\n                totalRecordsElly.push(record);\n              switch(record.fields['Tier']){\n                case '0': \n                  tier0Elly++;\n                  break;\n                case '1':\n                  tier1Elly++;\n                  break;\n                case '2':\n                  tier2Elly++;\n                  break;\n                case '3':\n                  tier3Elly++;\n                  break;\n                case '4':\n                  tier4Elly++;\n                  break;\n              }\n              let completionDate = record.fields['Completion Date'].split('T').shift();\n              totalIntegrationsArrayElly.push(completionDate);\n              if(completionDate === date) {          \n                dailyIntegrationsArrayElly.push(completionDate);\n              }\n              let completionMonth = completionDate.split('-')[1];\n              if(completionMonth === month) {\n                monthlyIntegrationsArrayElly.push(completionDate);\n              }\n\n              \n            let lastItemName = totalRecordsElly[totalRecordsElly.length - 1].fields['Company Name'];\n            //console.log(lastItemName);\n            let lastItemDate = totalRecordsElly[totalRecordsElly.length - 1].fields['Completion Date'];\n            let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n            let lastItemSubmitter = totalRecordsElly[totalRecordsElly.length - 1].fields['Name of submitter'];\n            //console.log(lastItemSubmitter);\n            let lastItemBuilder = totalRecordsElly[totalRecordsElly.length - 1].fields['Dashboard Builder'];\n            let lastItemTier = totalRecordsElly[totalRecordsElly.length - 1].fields['Tier'];\n            let lastItemShortname = totalRecordsElly[totalRecordsElly.length - 1].fields['Shortname'];\n            let lastItemWebType = totalRecordsElly[totalRecordsElly.length - 1].fields['Website Type'];\n            let lastCompanyRegion = totalRecordsElly[totalRecordsElly.length - 1].fields['Company Region'];\n            \n            companyArrayElly.push(lastItemName);\n            completionDateArrayElly.push(lastItemDateFormatted);\n            submitterArrayElly.push(lastItemSubmitter);\n            builderArrayElly.push(lastItemBuilder);\n            tierArrayElly.push(lastItemTier);\n            shortnameArrayElly.push(lastItemShortname);\n            webTypeArrayElly.push(lastItemWebType);\n            companyRegionArrayElly.push(lastCompanyRegion);\n            }\n            }\n              } catch(err) {\n                \n              }\n            \n                  try {\n                    if(record.fields['Claimed By:'][0] === idArray[6]) {\n                          \n                    if(record.fields['Completion Date']) {\n                      if(record === records.length -1) {\n                        console.log(record);\n                      }\n                        totalRecordsTobey.push(record);\n                      switch(record.fields['Tier']){\n                        case '0': \n                          tier0Tobey++;\n                          break;\n                        case '1':\n                          tier1Tobey++;\n                          break;\n                        case '2':\n                          tier2Tobey++;\n                          break;\n                        case '3':\n                          tier3Tobey++;\n                          break;\n                        case '4':\n                          tier4Tobey++;\n                          break;\n                      }\n                      let completionDate = record.fields['Completion Date'].split('T').shift();\n                      totalIntegrationsArrayTobey.push(completionDate);\n                      if(completionDate === date) {          \n                        dailyIntegrationsArrayTobey.push(completionDate);\n                      }\n                      let completionMonth = completionDate.split('-')[1];\n                      if(completionMonth === month) {\n                        monthlyIntegrationsArrayTobey.push(completionDate);\n                      }\n        \n                      \n                    let lastItemName = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Company Name'];\n                    //console.log(lastItemName);\n                    let lastItemDate = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Completion Date'];\n                    let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n                    let lastItemSubmitter = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Name of submitter'];\n                    //console.log(lastItemSubmitter);\n                    let lastItemBuilder = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Dashboard Builder'];\n                    let lastItemTier = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Tier'];\n                    let lastItemShortname = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Shortname'];\n                    let lastItemWebType = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Website Type'];\n                    let lastCompanyRegion = totalRecordsTobey[totalRecordsTobey.length - 1].fields['Company Region'];\n                    \n                    companyArrayTobey.push(lastItemName);\n                    completionDateArrayTobey.push(lastItemDateFormatted);\n                    submitterArrayTobey.push(lastItemSubmitter);\n                    builderArrayTobey.push(lastItemBuilder);\n                    tierArrayTobey.push(lastItemTier);\n                    shortnameArrayTobey.push(lastItemShortname);\n                    webTypeArrayTobey.push(lastItemWebType);\n                    companyRegionArrayTobey.push(lastCompanyRegion);\n                    }\n                    }\n                      } catch(err) {\n                        \n                      }\n                      try {\n                        if(record.fields['Claimed By:'][0] === idArray[7]) {\n                              \n                        if(record.fields['Completion Date']) {\n                          if(record === records.length -1) {\n                            console.log(record);\n                          }\n                            totalRecordsJohnny.push(record);\n                          switch(record.fields['Tier']){\n                            case '0': \n                              tier0Johnny++;\n                              break;\n                            case '1':\n                              tier1Johnny++;\n                              break;\n                            case '2':\n                              tier2Johnny++;\n                              break;\n                            case '3':\n                              tier3Johnny++;\n                              break;\n                            case '4':\n                              tier4Johnny++;\n                              break;\n                          }\n                          let completionDate = record.fields['Completion Date'].split('T').shift();\n                          totalIntegrationsArrayJohnny.push(completionDate);\n                          if(completionDate === date) {          \n                            dailyIntegrationsArrayJohnny.push(completionDate);\n                          }\n                          let completionMonth = completionDate.split('-')[1];\n                          if(completionMonth === month) {\n                            monthlyIntegrationsArrayJohnny.push(completionDate);\n                          }\n            \n                          \n                        let lastItemName = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Company Name'];\n                        //console.log(lastItemName);\n                        let lastItemDate = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Completion Date'];\n                        let lastItemDateFormatted = moment(lastItemDate).format('MMMM Do YYYY, h:mm a');\n                        let lastItemSubmitter = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Name of submitter'];\n                        //console.log(lastItemSubmitter);\n                        let lastItemBuilder = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Dashboard Builder'];\n                        let lastItemTier = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Tier'];\n                        let lastItemShortname = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Shortname'];\n                        let lastItemWebType = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Website Type'];\n                        let lastCompanyRegion = totalRecordsJohnny[totalRecordsJohnny.length - 1].fields['Company Region'];\n                        \n                        companyArrayJohnny.push(lastItemName);\n                        completionDateArrayJohnny.push(lastItemDateFormatted);\n                        submitterArrayJohnny.push(lastItemSubmitter);\n                        builderArrayJohnny.push(lastItemBuilder);\n                        tierArrayJohnny.push(lastItemTier);\n                        shortnameArrayJohnny.push(lastItemShortname);\n                        webTypeArrayJohnny.push(lastItemWebType);\n                        companyRegionArrayJohnny.push(lastCompanyRegion);\n                        }\n                        }\n                          } catch(err) {\n                            \n                          }\n          });\n          fetchNextPage();\n      }, function done(error) {\n          console.log(error);\n      });\n\n      setTimeout(() => {\n        \n        let mostRecentName = companyArray.pop();  \n        let mostRecentDate = completionDateArray.pop();\n        let mostRecentSubmitter = submitterArray.pop();\n        let mostRecentBuilder = builderArray.pop();\n        let mostRecentTier = tierArray.pop();\n        let mostRecentShortname = shortnameArray.pop();\n        let mostRecentWebType = webTypeArray.pop();\n        let mostRecentCompanyRegion = companyRegionArray.pop();\n\n        let colorProp = '';\n        let green = '#60af64';\n        let blue = '#399adb';\n        let pink = '#db6280';\n        switch(mostRecentCompanyRegion) {\n          case 'Americas':\n            colorProp = green;\n            break;\n          case 'EMEA':\n            colorProp = blue;\n            break;\n          case 'APAC':\n            colorProp = pink;\n            break;\n          default: \n            colorProp = green;\n        }\n\n        let mostRecentNameLive = companyArrayLive.pop();\n        let mostRecentDateLive = completionDateArrayLive.pop();\n        let mostRecentSubmitterLive = submitterArrayLive.pop();\n        let mostRecentIntegrationTypeLive = integrationTypeArrayLive.pop();\n        let mostRecentTierLive = tierArrayLive.pop();\n        let mostRecentShortnameLive = shortnameArrayLive.pop();\n        let mostRecentWebTypeLive = webTypeArrayLive.pop();\n        let mostRecentCompanyRegionLive = companyRegionArrayLive.pop();\n\n        let colorPropLive = '';\n        switch(mostRecentCompanyRegionLive) {\n          case 'Americas':\n            colorPropLive = green;\n            break;\n          case 'EMEA':\n            colorPropLive = blue;\n            break;\n          case 'APAC':\n            colorPropLive = pink;\n            break;\n          default: \n            colorPropLive = green;\n        }\n\n        let mostRecentNameNeubs = companyArrayNeubs.pop();  \n        let mostRecentDateNeubs = completionDateArrayNeubs.pop();\n        let mostRecentSubmitterNeubs = submitterArrayNeubs.pop();\n        let mostRecentBuilderNeubs = builderArrayNeubs.pop();\n        let mostRecentTierNeubs = tierArrayNeubs.pop();\n        let mostRecentShortnameNeubs = shortnameArrayNeubs.pop();\n        let mostRecentWebTypeNeubs = webTypeArrayNeubs.pop();\n        let mostRecentCompanyRegionNeubs = companyRegionArrayNeubs.pop();\n\n        let colorPropNeubs = '';\n        switch(mostRecentCompanyRegionNeubs) {\n          case 'Americas':\n            colorPropNeubs = green;\n            break;\n          case 'EMEA':\n            colorPropNeubs = blue;\n            break;\n          case 'APAC':\n            colorPropNeubs = pink;\n            break;\n          default: \n            colorPropNeubs = green;\n        }\n\n        let mostRecentNameLiveNeubs = companyArrayLiveNeubs.pop();\n        let mostRecentDateLiveNeubs = completionDateArrayLiveNeubs.pop();\n        let mostRecentSubmitterLiveNeubs = submitterArrayLiveNeubs.pop();\n        let mostRecentIntegrationTypeLiveNeubs = integrationTypeArrayLiveNeubs.pop();\n        let mostRecentTierLiveNeubs = tierArrayLiveNeubs.pop();\n        let mostRecentShortnameLiveNeubs = shortnameArrayLiveNeubs.pop();\n        let mostRecentWebTypeLiveNeubs = webTypeArrayLiveNeubs.pop();\n        let mostRecentCompanyRegionLiveNeubs = companyRegionArrayLiveNeubs.pop();\n\n        let colorPropLiveNeubs = '';\n        switch(mostRecentCompanyRegionLiveNeubs) {\n          case 'Americas':\n            colorPropLiveNeubs = green;\n            break;\n          case 'EMEA':\n            colorPropLiveNeubs = blue;\n            break;\n          case 'APAC':\n            colorPropLiveNeubs = pink;\n            break;\n          default: \n            colorPropLiveNeubs = green;\n        }\n        \n        let mostRecentNameZack = companyArrayZack.pop();  \n        let mostRecentDateZack = completionDateArrayZack.pop();\n        let mostRecentSubmitterZack = submitterArrayZack.pop();\n        let mostRecentBuilderZack = builderArrayZack.pop();\n        let mostRecentTierZack = tierArrayZack.pop();\n        let mostRecentShortnameZack = shortnameArrayZack.pop();\n        let mostRecentWebTypeZack = webTypeArrayZack.pop();\n        let mostRecentCompanyRegionZack = companyRegionArrayZack.pop();\n\n        let colorPropZack = '';\n        switch(mostRecentCompanyRegionZack) {\n          case 'Americas':\n            colorPropZack = green;\n            break;\n          case 'EMEA':\n            colorPropZack = blue;\n            break;\n          case 'APAC':\n            colorPropZack = pink;\n            break;\n          default: \n            colorPropZack = green;\n        }\n\n        let mostRecentNameLiveZack = companyArrayLiveZack.pop();\n        let mostRecentDateLiveZack = completionDateArrayLiveZack.pop();\n        let mostRecentSubmitterLiveZack = submitterArrayLiveZack.pop();\n        let mostRecentIntegrationTypeLiveZack = integrationTypeArrayLiveZack.pop();\n        let mostRecentTierLiveZack = tierArrayLiveZack.pop();\n        let mostRecentShortnameLiveZack = shortnameArrayLiveZack.pop();\n        let mostRecentWebTypeLiveZack = webTypeArrayLiveZack.pop();\n        let mostRecentCompanyRegionLiveZack = companyRegionArrayLiveZack.pop();\n\n        let colorPropLiveZack = '';\n        switch(mostRecentCompanyRegionLiveZack) {\n          case 'Americas':\n            colorPropLiveZack = green;\n            break;\n          case 'EMEA':\n            colorPropLiveZack = blue;\n            break;\n          case 'APAC':\n            colorPropLiveZack = pink;\n            break;\n          default: \n            colorPropLiveZack = green;\n        }\n\n        let mostRecentNameMarco = companyArrayMarco.pop();  \n        let mostRecentDateMarco = completionDateArrayMarco.pop();\n        let mostRecentSubmitterMarco = submitterArrayMarco.pop();\n        let mostRecentBuilderMarco = builderArrayMarco.pop();\n        let mostRecentTierMarco = tierArrayMarco.pop();\n        let mostRecentShortnameMarco = shortnameArrayMarco.pop();\n        let mostRecentWebTypeMarco = webTypeArrayMarco.pop();\n        let mostRecentCompanyRegionMarco = companyRegionArrayMarco.pop();\n\n        let colorPropMarco = '';\n        switch(mostRecentCompanyRegionMarco) {\n          case 'Americas':\n            colorPropMarco = green;\n            break;\n          case 'EMEA':\n            colorPropMarco = blue;\n            break;\n          case 'APAC':\n            colorPropMarco = pink;\n            break;\n          default: \n            colorPropMarco = green;\n        }\n\n        let mostRecentNameLiveMarco = companyArrayLiveMarco.pop();\n        let mostRecentDateLiveMarco = completionDateArrayLiveMarco.pop();\n        let mostRecentSubmitterLiveMarco = submitterArrayLiveMarco.pop();\n        let mostRecentIntegrationTypeLiveMarco = integrationTypeArrayLiveMarco.pop();\n        let mostRecentTierLiveMarco = tierArrayLiveMarco.pop();\n        let mostRecentShortnameLiveMarco = shortnameArrayLiveMarco.pop();\n        let mostRecentWebTypeLiveMarco = webTypeArrayLiveMarco.pop();\n        let mostRecentCompanyRegionLiveMarco = companyRegionArrayLiveMarco.pop();\n\n        let colorPropLiveMarco = '';\n        switch(mostRecentCompanyRegionLiveMarco) {\n          case 'Americas':\n            colorPropLiveMarco = green;\n            break;\n          case 'EMEA':\n            colorPropLiveMarco = blue;\n            break;\n          case 'APAC':\n            colorPropLiveMarco = pink;\n            break;\n          default: \n            colorPropLiveMarco = green;\n        }\n\n        let mostRecentNameAmaia= companyArrayAmaia.pop();  \n        let mostRecentDateAmaia = completionDateArrayAmaia.pop();\n        let mostRecentSubmitterAmaia = submitterArrayAmaia.pop();\n        let mostRecentBuilderAmaia = builderArrayAmaia.pop();\n        let mostRecentTierAmaia = tierArrayAmaia.pop();\n        let mostRecentShortnameAmaia = shortnameArrayAmaia.pop();\n        let mostRecentWebTypeAmaia = webTypeArrayAmaia.pop();\n        let mostRecentCompanyRegionAmaia = companyRegionArrayAmaia.pop();\n\n        let colorPropAmaia = '';\n        switch(mostRecentCompanyRegionAmaia) {\n          case 'Americas':\n            colorPropAmaia = green;\n            break;\n          case 'EMEA':\n            colorPropAmaia = blue;\n            break;\n          case 'APAC':\n            colorPropAmaia = pink;\n            break;\n          default: \n            colorPropAmaia = green;\n        }\n\n        console.log(colorPropAmaia);\n\n        let mostRecentNameLiveAmaia = companyArrayLiveAmaia.pop();\n        let mostRecentDateLiveAmaia = completionDateArrayLiveAmaia.pop();\n        let mostRecentSubmitterLiveAmaia = submitterArrayLiveAmaia.pop();\n        let mostRecentIntegrationTypeLiveAmaia = integrationTypeArrayLiveAmaia.pop();\n        let mostRecentTierLiveAmaia = tierArrayLiveAmaia.pop();\n        let mostRecentShortnameLiveAmaia = shortnameArrayLiveAmaia.pop();\n        let mostRecentWebTypeLiveAmaia = webTypeArrayLiveAmaia.pop();\n        let mostRecentCompanyRegionLiveAmaia = companyRegionArrayLiveAmaia.pop();\n\n        let colorPropLiveAmaia = '';\n        switch(mostRecentCompanyRegionLiveAmaia) {\n          case 'Americas':\n            colorPropLiveAmaia = green;\n            break;\n          case 'EMEA':\n            colorPropLiveAmaia = blue;\n            break;\n          case 'APAC':\n            colorPropLiveAmaia = pink;\n            break;\n          default: \n            colorPropLiveAmaia = green;\n        }\n\n        let mostRecentNameElly = companyArrayElly.pop();  \n        let mostRecentDateElly = completionDateArrayElly.pop();\n        let mostRecentSubmitterElly = submitterArrayElly.pop();\n        let mostRecentBuilderElly = builderArrayElly.pop();\n        let mostRecentTierElly = tierArrayElly.pop();\n        let mostRecentShortnameElly = shortnameArrayElly.pop();\n        let mostRecentWebTypeElly = webTypeArrayElly.pop();\n        let mostRecentCompanyRegionElly = companyRegionArrayElly.pop();\n\n        let colorPropElly = '';\n        switch(mostRecentCompanyRegionElly) {\n          case 'Americas':\n            colorPropElly = green;\n            break;\n          case 'EMEA':\n            colorPropElly = blue;\n            break;\n          case 'APAC':\n            colorPropElly = pink;\n            break;\n          default: \n            colorPropElly = green;\n        }\n\n        let mostRecentNameLiveElly = companyArrayLiveElly.pop();\n        let mostRecentDateLiveElly = completionDateArrayLiveElly.pop();\n        let mostRecentSubmitterLiveElly = submitterArrayLiveElly.pop();\n        let mostRecentIntegrationTypeLiveElly = integrationTypeArrayLiveElly.pop();\n        let mostRecentTierLiveElly = tierArrayLiveElly.pop();\n        let mostRecentShortnameLiveElly = shortnameArrayLiveElly.pop();\n        let mostRecentWebTypeLiveElly = webTypeArrayLiveElly.pop();\n        let mostRecentCompanyRegionLiveElly = companyRegionArrayLiveElly.pop();\n\n        let colorPropLiveElly = '';\n        switch(mostRecentCompanyRegionLiveElly) {\n          case 'Americas':\n            colorPropLiveElly = green;\n            break;\n          case 'EMEA':\n            colorPropLiveElly = blue;\n            break;\n          case 'APAC':\n            colorPropLiveElly = pink;\n            break;\n          default: \n            colorPropLiveElly = green;\n        }\n\n        let mostRecentNameTobey = companyArrayTobey.pop();  \n        let mostRecentDateTobey = completionDateArrayTobey.pop();\n        let mostRecentSubmitterTobey = submitterArrayTobey.pop();\n        let mostRecentBuilderTobey = builderArrayTobey.pop();\n        let mostRecentTierTobey = tierArrayTobey.pop();\n        let mostRecentShortnameTobey = shortnameArrayTobey.pop();\n        let mostRecentWebTypeTobey = webTypeArrayTobey.pop();\n        let mostRecentCompanyRegionTobey = companyRegionArrayTobey.pop();\n\n        let colorPropTobey = '';\n        switch(mostRecentCompanyRegionTobey) {\n          case 'Americas':\n            colorPropTobey = green;\n            break;\n          case 'EMEA':\n            colorPropTobey = blue;\n            break;\n          case 'APAC':\n            colorPropTobey = pink;\n            break;\n          default: \n          colorPropTobey = green;\n        }\n\n        let mostRecentNameLiveTobey = companyArrayLiveTobey.pop();\n        let mostRecentDateLiveTobey = completionDateArrayLiveTobey.pop();\n        let mostRecentSubmitterLiveTobey = submitterArrayLiveTobey.pop();\n        let mostRecentIntegrationTypeLiveTobey = integrationTypeArrayLiveTobey.pop();\n        let mostRecentTierLiveTobey = tierArrayLiveTobey.pop();\n        let mostRecentShortnameLiveTobey = shortnameArrayLiveTobey.pop();\n        let mostRecentWebTypeLiveTobey = webTypeArrayLiveTobey.pop();\n        let mostRecentCompanyRegionLiveTobey = companyRegionArrayLiveTobey.pop();\n\n        let colorPropLiveTobey = '';\n        switch(mostRecentCompanyRegionLiveTobey) {\n          case 'Americas':\n            colorPropLiveTobey = green;\n            break;\n          case 'EMEA':\n            colorPropLiveTobey = blue;\n            break;\n          case 'APAC':\n            colorPropLiveTobey = pink;\n            break;\n          default: \n          colorPropLiveTobey = green;\n        }\n\n        let mostRecentNameJohnny = companyArrayJohnny.pop();  \n        let mostRecentDateJohnny = completionDateArrayJohnny.pop();\n        let mostRecentSubmitterJohnny = submitterArrayJohnny.pop();\n        let mostRecentBuilderJohnny = builderArrayJohnny.pop();\n        let mostRecentTierJohnny = tierArrayJohnny.pop();\n        let mostRecentShortnameJohnny = shortnameArrayJohnny.pop();\n        let mostRecentWebTypeJohnny = webTypeArrayJohnny.pop();\n        let mostRecentCompanyRegionJohnny = companyRegionArrayJohnny.pop();\n\n        let colorPropJohnny = '';\n        switch(mostRecentCompanyRegionJohnny) {\n          case 'Americas':\n            colorPropJohnny = green;\n            break;\n          case 'EMEA':\n            colorPropJohnny = blue;\n            break;\n          case 'APAC':\n            colorPropJohnny = pink;\n            break;\n          default: \n          colorPropJohnny = green;\n        }\n\n        let mostRecentNameLiveJohnny = companyArrayLiveJohnny.pop();\n        let mostRecentDateLiveJohnny = completionDateArrayLiveJohnny.pop();\n        let mostRecentSubmitterLiveJohnny = submitterArrayLiveJohnny.pop();\n        let mostRecentIntegrationTypeLiveJohnny = integrationTypeArrayLiveJohnny.pop();\n        let mostRecentTierLiveJohnny = tierArrayLiveJohnny.pop();\n        let mostRecentShortnameLiveJohnny = shortnameArrayLiveJohnny.pop();\n        let mostRecentWebTypeLiveJohnny = webTypeArrayLiveJohnny.pop();\n        let mostRecentCompanyRegionLiveJohnny = companyRegionArrayLiveJohnny.pop();\n\n        let colorPropLiveJohnny = '';\n        switch(mostRecentCompanyRegionLiveJohnny) {\n          case 'Americas':\n            colorPropLiveJohnny = green;\n            break;\n          case 'EMEA':\n            colorPropLiveJohnny = blue;\n            break;\n          case 'APAC':\n            colorPropLiveJohnny = pink;\n            break;\n          default: \n          colorPropLiveJohnny = green;\n        }\n        this.setState({\n          loading:false,\n          patrick: {\n            records: {\n              monthly: monthlyIntegrationsArray.length,\n              daily: dailyIntegrationsArray.length,\n              total: totalIntegrationsArray.length,\n              mostRecentName: mostRecentName,\n              mostRecentDate: mostRecentDate,\n              mostRecentSubmitter: mostRecentSubmitter,\n              mostRecentBuilder: mostRecentBuilder,\n              mostRecentTier: mostRecentTier,\n              mostRecentShortname: mostRecentShortname,\n              mostRecentWebType: mostRecentWebType,\n              mostRecentCompanyRegion: mostRecentCompanyRegion,\n              colorProp: colorProp,\n              tier0: tier0,\n              tier1: tier1,\n              tier2: tier2,\n              tier3: tier3,\n              tier4: tier4,\n            },\n            live: {\n              total: totalIntegrationsArrayLive.length,\n              monthly:  monthlyIntegrationsArrayLive.length,\n              daily: dailyIntegrationsArrayLive.length,\n              mostRecentNameLive: mostRecentNameLive,\n              mostRecentDateLive: mostRecentDateLive,\n              mostRecentSubmitterLive: mostRecentSubmitterLive,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLive,\n              mostRecentTierLive: mostRecentTierLive,\n              mostRecentShortnameLive: mostRecentShortnameLive,\n              mostRecentWebTypeLive: mostRecentWebTypeLive,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLive,\n              colorProp: colorPropLive,\n              tier0Live: tier0Live,\n              tier1Live: tier1Live,\n              tier2Live: tier2Live,\n              tier3Live: tier3Live,\n              tier4Live: tier4Live,\n            },\n            info:{\n              name: 'Patrick Poole',\n              image: patrickImage,\n              title: 'Integrations Specialist',\n              slack: 'patrick',\n              timezone: 'Mountain',\n              phone: '303-888-8909',\n              email: 'patrick.poole@fareharbor.com',\n              office: 'Denver',\n              manager: 'Raleigh Caruso',\n              teamLead: 'neubs'\n            \n            }\n          },\n          neubs: {\n            records: {\n              monthly: monthlyIntegrationsArrayNeubs.length,\n              daily: dailyIntegrationsArrayNeubs.length,\n              total: totalIntegrationsArrayNeubs.length,\n              mostRecentName: mostRecentNameNeubs,\n              mostRecentDate: mostRecentDateNeubs,\n              mostRecentSubmitter: mostRecentSubmitterNeubs,\n              mostRecentBuilder: mostRecentBuilderNeubs,\n              mostRecentTier: mostRecentTierNeubs,\n              mostRecentShortname: mostRecentShortnameNeubs,\n              mostRecentWebType: mostRecentWebTypeNeubs,\n              mostRecentCompanyRegion: mostRecentCompanyRegionNeubs,\n              colorProp: colorPropNeubs,\n              tier0: tier0Neubs,\n              tier1: tier1Neubs,\n              tier2: tier2Neubs,\n              tier3: tier3Neubs,\n              tier4: tier4Neubs,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveNeubs.length,\n              monthly:  monthlyIntegrationsArrayLiveNeubs.length,\n              daily: dailyIntegrationsArrayLiveNeubs.length,\n              mostRecentNameLive: mostRecentNameLiveNeubs,\n              mostRecentDateLive: mostRecentDateLiveNeubs,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveNeubs,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveNeubs,\n              mostRecentTierLive: mostRecentTierLiveNeubs,\n              mostRecentShortnameLive: mostRecentShortnameLiveNeubs,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveNeubs,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveNeubs,\n              colorProp: colorPropLiveNeubs,\n              tier0Live: tier0LiveNeubs,\n              tier1Live: tier1LiveNeubs,\n              tier2Live: tier2LiveNeubs,\n              tier3Live: tier3LiveNeubs,\n              tier4Live: tier4LiveNeubs,\n            },\n            info:{\n              name: 'Alex Neubauer',\n              image: neubsImage,\n              title: 'Enterprise Integrations',\n              slack: 'neubs',\n              timezone: 'Mountain',\n              phone: '615-354-4808',\n              email: 'alex@fareharbor.com',\n              office: 'Denver',\n              manager: 'Raleigh Caruso'\n            \n            }\n          },\n          zack: {\n            records: {\n              monthly: monthlyIntegrationsArrayZack.length,\n              daily: dailyIntegrationsArrayZack.length,\n              total: totalIntegrationsArrayZack.length,\n              mostRecentName: mostRecentNameZack,\n              mostRecentDate: mostRecentDateZack,\n              mostRecentSubmitter: mostRecentSubmitterZack,\n              mostRecentBuilder: mostRecentBuilderZack,\n              mostRecentTier: mostRecentTierZack,\n              mostRecentShortname: mostRecentShortnameZack,\n              mostRecentWebType: mostRecentWebTypeZack,\n              mostRecentCompanyRegion: mostRecentCompanyRegionZack,\n              colorProp: colorPropZack,\n              tier0: tier0Zack,\n              tier1: tier1Zack,\n              tier2: tier2Zack,\n              tier3: tier3Zack,\n              tier4: tier4Zack,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveZack.length,\n              monthly:  monthlyIntegrationsArrayLiveZack.length,\n              daily: dailyIntegrationsArrayLiveZack.length,\n              mostRecentNameLive: mostRecentNameLiveZack,\n              mostRecentDateLive: mostRecentDateLiveZack,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveZack,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveZack,\n              mostRecentTierLive: mostRecentTierLiveZack,\n              mostRecentShortnameLive: mostRecentShortnameLiveZack,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveZack,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveZack,\n              colorProp: colorPropLiveZack,\n              tier0Live: tier0LiveZack,\n              tier1Live: tier1LiveZack,\n              tier2Live: tier2LiveZack,\n              tier3Live: tier3LiveZack,\n              tier4Live: tier4LiveZack,\n            },\n            info:{\n              name: 'Zack Feld',\n              image: zackImage,\n              title: 'Special Big Helper',\n              slack: 'zackf',\n              timezone: 'Mountain',\n              phone: '847-912-1215',\n              email: 'zack@fareharbor.com',\n              office: 'Denver',\n              manager: 'Mark Loh'\n            \n            }\n          },\n          marco: {\n            records: {\n              monthly: monthlyIntegrationsArrayMarco.length,\n              daily: dailyIntegrationsArrayMarco.length,\n              total: totalIntegrationsArrayMarco.length,\n              mostRecentName: mostRecentNameMarco,\n              mostRecentDate: mostRecentDateMarco,\n              mostRecentSubmitter: mostRecentSubmitterMarco,\n              mostRecentBuilder: mostRecentBuilderMarco,\n              mostRecentTier: mostRecentTierMarco,\n              mostRecentShortname: mostRecentShortnameMarco,\n              mostRecentWebType: mostRecentWebTypeMarco,\n              mostRecentCompanyRegion: mostRecentCompanyRegionMarco,\n              colorProp: colorPropMarco,\n              tier0: tier0Marco,\n              tier1: tier1Marco,\n              tier2: tier2Marco,\n              tier3: tier3Marco,\n              tier4: tier4Marco,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveMarco.length,\n              monthly:  monthlyIntegrationsArrayLiveMarco.length,\n              daily: dailyIntegrationsArrayLiveMarco.length,\n              mostRecentNameLive: mostRecentNameLiveMarco,\n              mostRecentDateLive: mostRecentDateLiveMarco,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveMarco,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveMarco,\n              mostRecentTierLive: mostRecentTierLiveMarco,\n              mostRecentShortnameLive: mostRecentShortnameLiveMarco,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveMarco,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveMarco,\n              colorProp: colorPropLiveMarco,\n              tier0Live: tier0LiveMarco,\n              tier1Live: tier1LiveMarco,\n              tier2Live: tier2LiveMarco,\n              tier3Live: tier3LiveMarco,\n              tier4Live: tier4LiveMarco,\n            },\n            info:{\n              name: 'Marco Depperu',\n              image: marcoImage,\n              title: 'Integrations Specialist',\n              slack: 'mdepperu',\n              timezone: 'Central European Summer Time',\n              phone: '0686423460',\n              email: 'marco.depperu@fareharbor.com',\n              office: 'Amsterdam',\n              manager: 'Michael Klempner'\n            \n            }\n          },\n          amaia: {\n            records: {\n              monthly: monthlyIntegrationsArrayAmaia.length,\n              daily: dailyIntegrationsArrayAmaia.length,\n              total: totalIntegrationsArrayAmaia.length,\n              mostRecentName: mostRecentNameAmaia,\n              mostRecentDate: mostRecentDateAmaia,\n              mostRecentSubmitter: mostRecentSubmitterAmaia,\n              mostRecentBuilder: mostRecentBuilderAmaia,\n              mostRecentTier: mostRecentTierAmaia,\n              mostRecentShortname: mostRecentShortnameAmaia,\n              mostRecentWebType: mostRecentWebTypeAmaia,\n              mostRecentCompanyRegion: mostRecentCompanyRegionAmaia,\n              colorProp: colorPropAmaia,\n              tier0: tier0Amaia,\n              tier1: tier1Amaia,\n              tier2: tier2Amaia,\n              tier3: tier3Amaia,\n              tier4: tier4Amaia,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveAmaia.length,\n              monthly:  monthlyIntegrationsArrayLiveAmaia.length,\n              daily: dailyIntegrationsArrayLiveAmaia.length,\n              mostRecentNameLive: mostRecentNameLiveAmaia,\n              mostRecentDateLive: mostRecentDateLiveAmaia,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveAmaia,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveAmaia,\n              mostRecentTierLive: mostRecentTierLiveAmaia,\n              mostRecentShortnameLive: mostRecentShortnameLiveAmaia,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveAmaia,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveAmaia,\n              colorProp: colorPropLiveAmaia,\n              tier0Live: tier0LiveAmaia,\n              tier1Live: tier1LiveAmaia,\n              tier2Live: tier2LiveAmaia,\n              tier3Live: tier3LiveAmaia,\n              tier4Live: tier4LiveAmaia\n            },\n            info:{\n              name: 'Amaia Ibarra',\n              image: amaiaImage,\n              title: 'Integrations Specialist',\n              slack: 'amaia',\n              timezone: 'Central European Summer Time',\n              phone: '34615711333',\n              email: 'amaia.ibarra@fareharbor.com',\n              office: 'Amsterdam',\n              manager: 'Michael Klempner'\n            \n            }\n          },\n          elly: {\n            records: {\n              monthly: monthlyIntegrationsArrayElly.length,\n              daily: dailyIntegrationsArrayElly.length,\n              total: totalIntegrationsArrayElly.length,\n              mostRecentName: mostRecentNameElly,\n              mostRecentDate: mostRecentDateElly,\n              mostRecentSubmitter: mostRecentSubmitterElly,\n              mostRecentBuilder: mostRecentBuilderElly,\n              mostRecentTier: mostRecentTierElly,\n              mostRecentShortname: mostRecentShortnameElly,\n              mostRecentWebType: mostRecentWebTypeElly,\n              mostRecentCompanyRegion: mostRecentCompanyRegionElly,\n              colorProp: colorPropElly,\n              tier0: tier0Elly,\n              tier1: tier1Elly,\n              tier2: tier2Elly,\n              tier3: tier3Elly,\n              tier4: tier4Elly,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveElly.length,\n              monthly:  monthlyIntegrationsArrayLiveElly.length,\n              daily: dailyIntegrationsArrayLiveElly.length,\n              mostRecentNameLive: mostRecentNameLiveElly,\n              mostRecentDateLive: mostRecentDateLiveElly,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveElly,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveElly,\n              mostRecentTierLive: mostRecentTierLiveElly,\n              mostRecentShortnameLive: mostRecentShortnameLiveElly,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveElly,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveElly,\n              colorProp: colorPropLiveElly,\n              tier0Live: tier0LiveElly,\n              tier1Live: tier1LiveElly,\n              tier2Live: tier2LiveElly,\n              tier3Live: tier3LiveElly,\n              tier4Live: tier4LiveElly\n            },\n            info:{\n              name: 'Nallely Torres',\n              image: ellyImage,\n              title: 'Integrations Specialist',\n              slack: 'elly',\n              timezone: 'Mountain',\n              phone: '720-380-3867',\n              email: 'nallely.torres@fareharbor.com',\n              office: 'Denver',\n              manager: 'Raleigh Caruso',\n              teamLead: 'Neubs'\n            \n            }\n          },\n          tobey: {\n            records: {\n              monthly: monthlyIntegrationsArrayTobey.length,\n              daily: dailyIntegrationsArrayTobey.length,\n              total: totalIntegrationsArrayTobey.length,\n              mostRecentName: mostRecentNameTobey,\n              mostRecentDate: mostRecentDateTobey,\n              mostRecentSubmitter: mostRecentSubmitterTobey,\n              mostRecentBuilder: mostRecentBuilderTobey,\n              mostRecentTier: mostRecentTierTobey,\n              mostRecentShortname: mostRecentShortnameTobey,\n              mostRecentWebType: mostRecentWebTypeTobey,\n              mostRecentCompanyRegion: mostRecentCompanyRegionTobey,\n              colorProp: colorPropTobey,\n              tier0: tier0Tobey,\n              tier1: tier1Tobey,\n              tier2: tier2Tobey,\n              tier3: tier3Tobey,\n              tier4: tier4Tobey,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveTobey.length,\n              monthly:  monthlyIntegrationsArrayLiveTobey.length,\n              daily: dailyIntegrationsArrayLiveTobey.length,\n              mostRecentNameLive: mostRecentNameLiveTobey,\n              mostRecentDateLive: mostRecentDateLiveTobey,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveTobey,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveTobey,\n              mostRecentTierLive: mostRecentTierLiveTobey,\n              mostRecentShortnameLive: mostRecentShortnameLiveTobey,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveTobey,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveTobey,\n              colorProp: colorPropLiveTobey,\n              tier0Live: tier0LiveTobey,\n              tier1Live: tier1LiveTobey,\n              tier2Live: tier2LiveTobey,\n              tier3Live: tier3LiveTobey,\n              tier4Live: tier4LiveTobey\n            },\n            info:{\n              name: 'Tobey Ross',\n              image: tobeyImage,\n              title: 'Integrations Specialist',\n              slack: 'tobez',\n              timezone: 'Mountain',\n              phone: '512-529-6783',\n              email: 'tobey.ross@fareharbor.com',\n              office: 'Denver',\n              manager: 'Raleigh Caruso',\n              teamLead: 'Neubs'\n            \n            }\n          },\n          johnny: {\n            records: {\n              monthly: monthlyIntegrationsArrayJohnny.length,\n              daily: dailyIntegrationsArrayJohnny.length,\n              total: totalIntegrationsArrayJohnny.length,\n              mostRecentName: mostRecentNameJohnny,\n              mostRecentDate: mostRecentDateJohnny,\n              mostRecentSubmitter: mostRecentSubmitterJohnny,\n              mostRecentBuilder: mostRecentBuilderJohnny,\n              mostRecentTier: mostRecentTierJohnny,\n              mostRecentShortname: mostRecentShortnameJohnny,\n              mostRecentWebType: mostRecentWebTypeJohnny,\n              mostRecentCompanyRegion: mostRecentCompanyRegionJohnny,\n              colorProp: colorPropJohnny,\n              tier0: tier0Johnny,\n              tier1: tier1Johnny,\n              tier2: tier2Johnny,\n              tier3: tier3Johnny,\n              tier4: tier4Johnny,\n            },\n            live: {\n              total: totalIntegrationsArrayLiveJohnny.length,\n              monthly:  monthlyIntegrationsArrayLiveJohnny.length,\n              daily: dailyIntegrationsArrayLiveJohnny.length,\n              mostRecentNameLive: mostRecentNameLiveJohnny,\n              mostRecentDateLive: mostRecentDateLiveJohnny,\n              mostRecentSubmitterLive: mostRecentSubmitterLiveJohnny,\n              mostRecentIntegrationTypeLive: mostRecentIntegrationTypeLiveJohnny,\n              mostRecentTierLive: mostRecentTierLiveJohnny,\n              mostRecentShortnameLive: mostRecentShortnameLiveJohnny,\n              mostRecentWebTypeLive: mostRecentWebTypeLiveJohnny,\n              mostRecentCompanyRegionLive: mostRecentCompanyRegionLiveJohnny,\n              colorProp: colorPropLiveJohnny,\n              tier0Live: tier0LiveJohnny,\n              tier1Live: tier1LiveJohnny,\n              tier2Live: tier2LiveJohnny,\n              tier3Live: tier3LiveJohnny,\n              tier4Live: tier4LiveJohnny\n            },\n            info:{\n              name: 'Johnny Garcia',\n              image: johnnyImage,\n              title: 'Integrations Specialist',\n              slack: 'johnnyboy',\n              timezone: 'Mountain',\n              phone: '303-514-1387',\n              email: 'johnny.garcia@fareharbor.com',\n              office: 'Denver',\n              manager: 'Raleigh Caruso',\n              teamLead:'Neubs'\n            }\n          }\n        \n        })\n        \n        \n    }, 12000);\n\n  }\n\nloadOBRecords();\n \n\n}\nrender() {\n    console.log(this.state.elly.live.daily);\n  return (\n    <div className=\"App\">\n    {this.state.loading ? <LoadingSpinner /> :\n    <div>\n      <div className=\"header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <MainHeading>Airtable Metrics Dashboard</MainHeading>\n      </div>\n         <AppContainer>\n            <Container>\n              <Integrator name={this.state.patrick.info.name} image={this.state.patrick.info.image} \n             title={this.state.patrick.info.title} slack={this.state.patrick.info.slack} timezone={this.state.patrick.info.timezone}\n             phone={this.state.patrick.info.phone} email={this.state.patrick.info.email} office={this.state.patrick.info.office} \n             manager={this.state.patrick.info.manager}  total={this.state.patrick.records.total} monthly={this.state.patrick.records.monthly}\n             daily={this.state.patrick.records.daily} mostRecentName={this.state.patrick.records.mostRecentName} mostRecentDate={this.state.patrick.records.mostRecentDate}\n             mostRecentSubmitter={this.state.patrick.records.mostRecentSubmitter} mostRecentBuilder={this.state.patrick.records.mostRecentBuilder}\n             mostRecentTier={this.state.patrick.records.mostRecentTier} mostRecentShortname={this.state.patrick.records.mostRecentShortname}\n             mostRecentWebType={this.state.patrick.records.mostRecentWebType} mostRecentCompanyRegion={this.state.patrick.records.mostRecentCompanyRegion} \n             colorProp={this.state.patrick.records.colorProp} totalLive={this.state.patrick.live.total} monthlyLive={this.state.patrick.live.monthly}\n             dailyLive={this.state.patrick.live.daily} mostRecentNameLive={this.state.patrick.live.mostRecentNameLive} mostRecentDateLive={this.state.patrick.live.mostRecentDateLive}\n             mostRecentSubmitterLive={this.state.patrick.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.patrick.live.mostRecentIntegrationTypeLive}\n             mostRecentTierLive={this.state.patrick.live.mostRecentTierLive} mostRecentShortnameLive={this.state.patrick.live.mostRecentShortnameLive}\n             mostRecentWebTypeLive={this.state.patrick.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.patrick.live.mostRecentCompanyRegionLive} \n             colorPropLive={this.state.patrick.live.colorProp} tier0={this.state.patrick.records.tier0} tier1={this.state.patrick.records.tier1}\n             tier2={this.state.patrick.records.tier2} tier3={this.state.patrick.records.tier3} tier4={this.state.patrick.records.tier4} \n             tier0Live={this.state.patrick.live.tier0Live} tier1Live={this.state.patrick.live.tier1Live}\n             tier2Live={this.state.patrick.live.tier2Live} tier3Live={this.state.patrick.live.tier3Live} tier4Live={this.state.patrick.live.tier4Live}/> \n           </Container>\n           <Container>\n              <Integrator name={this.state.amaia.info.name} image={this.state.amaia.info.image} \n                title={this.state.amaia.info.title} slack={this.state.amaia.info.slack} timezone={this.state.amaia.info.timezone}\n                phone={this.state.amaia.info.phone} email={this.state.amaia.info.email} office={this.state.amaia.info.office} \n                manager={this.state.amaia.info.manager}  total={this.state.amaia.records.total} monthly={this.state.amaia.records.monthly}\n                daily={this.state.amaia.records.daily} mostRecentName={this.state.amaia.records.mostRecentName} mostRecentDate={this.state.amaia.records.mostRecentDate}\n                mostRecentSubmitter={this.state.amaia.records.mostRecentSubmitter} mostRecentBuilder={this.state.amaia.records.mostRecentBuilder}\n                mostRecentTier={this.state.amaia.records.mostRecentTier} mostRecentShortname={this.state.amaia.records.mostRecentShortname}\n                mostRecentWebType={this.state.amaia.records.mostRecentWebType} mostRecentCompanyRegion={this.state.amaia.records.mostRecentCompanyRegion} \n                colorProp={this.state.amaia.records.colorProp} totalLive={this.state.amaia.live.total} monthlyLive={this.state.amaia.live.monthly}\n                dailyLive={this.state.amaia.live.daily} mostRecentNameLive={this.state.amaia.live.mostRecentNameLive} mostRecentDateLive={this.state.amaia.live.mostRecentDateLive}\n                mostRecentSubmitterLive={this.state.amaia.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.amaia.live.mostRecentIntegrationTypeLive}\n                mostRecentTierLive={this.state.amaia.live.mostRecentTierLive} mostRecentShortnameLive={this.state.amaia.live.mostRecentShortnameLive}\n                mostRecentWebTypeLive={this.state.amaia.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.amaia.live.mostRecentCompanyRegionLive} \n                colorPropLive={this.state.amaia.live.colorProp} tier0={this.state.amaia.records.tier0} tier1={this.state.amaia.records.tier1}\n                tier2={this.state.amaia.records.tier2} tier3={this.state.amaia.records.tier3} tier4={this.state.amaia.records.tier4} \n                tier0Live={this.state.amaia.live.tier0Live} tier1Live={this.state.amaia.live.tier1Live}\n                tier2Live={this.state.amaia.live.tier2Live} tier3Live={this.state.amaia.live.tier3Live} tier4Live={this.state.amaia.live.tier4Live}/>\n            </Container>\n           <Container>\n           <Integrator name={this.state.neubs.info.name} image={this.state.neubs.info.image} \n             title={this.state.neubs.info.title} slack={this.state.neubs.info.slack} timezone={this.state.neubs.info.timezone}\n             phone={this.state.neubs.info.phone} email={this.state.neubs.info.email} office={this.state.neubs.info.office} \n             manager={this.state.neubs.info.manager}  total={this.state.neubs.records.total} monthly={this.state.neubs.records.monthly}\n             daily={this.state.neubs.records.daily} mostRecentName={this.state.neubs.records.mostRecentName} mostRecentDate={this.state.neubs.records.mostRecentDate}\n             mostRecentSubmitter={this.state.neubs.records.mostRecentSubmitter} mostRecentBuilder={this.state.neubs.records.mostRecentBuilder}\n             mostRecentTier={this.state.neubs.records.mostRecentTier} mostRecentShortname={this.state.neubs.records.mostRecentShortname}\n             mostRecentWebType={this.state.neubs.records.mostRecentWebType} mostRecentCompanyRegion={this.state.neubs.records.mostRecentCompanyRegion} \n             colorProp={this.state.neubs.records.colorProp} totalLive={this.state.neubs.live.total} monthlyLive={this.state.neubs.live.monthly}\n             dailyLive={this.state.neubs.live.daily} mostRecentNameLive={this.state.neubs.live.mostRecentNameLive} mostRecentDateLive={this.state.neubs.live.mostRecentDateLive}\n             mostRecentSubmitterLive={this.state.neubs.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.neubs.live.mostRecentIntegrationTypeLive}\n             mostRecentTierLive={this.state.neubs.live.mostRecentTierLive} mostRecentShortnameLive={this.state.neubs.live.mostRecentShortnameLive}\n             mostRecentWebTypeLive={this.state.neubs.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.neubs.live.mostRecentCompanyRegionLive} \n             colorPropLive={this.state.neubs.live.colorProp}tier0={this.state.neubs.records.tier0} tier1={this.state.neubs.records.tier1}\n             tier2={this.state.neubs.records.tier2} tier3={this.state.neubs.records.tier3} tier4={this.state.neubs.records.tier4} \n             tier0Live={this.state.neubs.live.tier0Live} tier1Live={this.state.neubs.live.tier1Live}\n             tier2Live={this.state.neubs.live.tier2Live} tier3Live={this.state.neubs.live.tier3Live} tier4Live={this.state.neubs.live.tier4Live}/>\n            </Container>\n            \n            <Container>\n              <Integrator name={this.state.marco.info.name} image={this.state.marco.info.image} \n                title={this.state.marco.info.title} slack={this.state.marco.info.slack} timezone={this.state.marco.info.timezone}\n                phone={this.state.marco.info.phone} email={this.state.marco.info.email} office={this.state.marco.info.office} \n                manager={this.state.marco.info.manager}  total={this.state.marco.records.total} monthly={this.state.marco.records.monthly}\n                daily={this.state.marco.records.daily} mostRecentName={this.state.marco.records.mostRecentName} mostRecentDate={this.state.marco.records.mostRecentDate}\n                mostRecentSubmitter={this.state.marco.records.mostRecentSubmitter} mostRecentBuilder={this.state.marco.records.mostRecentBuilder}\n                mostRecentTier={this.state.marco.records.mostRecentTier} mostRecentShortname={this.state.marco.records.mostRecentShortname}\n                mostRecentWebType={this.state.marco.records.mostRecentWebType} mostRecentCompanyRegion={this.state.marco.records.mostRecentCompanyRegion} \n                colorProp={this.state.marco.records.colorProp} totalLive={this.state.marco.live.total} monthlyLive={this.state.marco.live.monthly}\n                dailyLive={this.state.marco.live.daily} mostRecentNameLive={this.state.marco.live.mostRecentNameLive} mostRecentDateLive={this.state.marco.live.mostRecentDateLive}\n                mostRecentSubmitterLive={this.state.marco.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.marco.live.mostRecentIntegrationTypeLive}\n                mostRecentTierLive={this.state.marco.live.mostRecentTierLive} mostRecentShortnameLive={this.state.marco.live.mostRecentShortnameLive}\n                mostRecentWebTypeLive={this.state.marco.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.marco.live.mostRecentCompanyRegionLive} \n                colorPropLive={this.state.marco.live.colorProp} tier0={this.state.marco.records.tier0} tier1={this.state.marco.records.tier1}\n                tier2={this.state.marco.records.tier2} tier3={this.state.marco.records.tier3} tier4={this.state.marco.records.tier4} \n                tier0Live={this.state.marco.live.tier0Live} tier1Live={this.state.marco.live.tier1Live}\n                tier2Live={this.state.marco.live.tier2Live} tier3Live={this.state.marco.live.tier3Live} tier4Live={this.state.marco.live.tier4Live}/>\n            </Container>\n           \n            <Container>\n              <Integrator name={this.state.tobey.info.name} image={this.state.tobey.info.image} \n                title={this.state.tobey.info.title} slack={this.state.tobey.info.slack} timezone={this.state.tobey.info.timezone}\n                phone={this.state.tobey.info.phone} email={this.state.tobey.info.email} office={this.state.tobey.info.office} \n                manager={this.state.tobey.info.manager}  total={this.state.tobey.records.total} monthly={this.state.tobey.records.monthly}\n                daily={this.state.tobey.records.daily} mostRecentName={this.state.tobey.records.mostRecentName} mostRecentDate={this.state.tobey.records.mostRecentDate}\n                mostRecentSubmitter={this.state.tobey.records.mostRecentSubmitter} mostRecentBuilder={this.state.tobey.records.mostRecentBuilder}\n                mostRecentTier={this.state.tobey.records.mostRecentTier} mostRecentShortname={this.state.tobey.records.mostRecentShortname}\n                mostRecentWebType={this.state.tobey.records.mostRecentWebType} mostRecentCompanyRegion={this.state.tobey.records.mostRecentCompanyRegion} \n                colorProp={this.state.tobey.records.colorProp} totalLive={this.state.tobey.live.total} monthlyLive={this.state.tobey.live.monthly}\n                dailyLive={this.state.tobey.live.daily} mostRecentNameLive={this.state.tobey.live.mostRecentNameLive} mostRecentDateLive={this.state.tobey.live.mostRecentDateLive}\n                mostRecentSubmitterLive={this.state.tobey.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.tobey.live.mostRecentIntegrationTypeLive}\n                mostRecentTierLive={this.state.tobey.live.mostRecentTierLive} mostRecentShortnameLive={this.state.tobey.live.mostRecentShortnameLive}\n                mostRecentWebTypeLive={this.state.tobey.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.tobey.live.mostRecentCompanyRegionLive} \n                colorPropLive={this.state.tobey.live.colorProp}tier0={this.state.tobey.records.tier0} tier1={this.state.tobey.records.tier1}\n                tier2={this.state.tobey.records.tier2} tier3={this.state.tobey.records.tier3} tier4={this.state.tobey.records.tier4} \n                tier0Live={this.state.tobey.live.tier0Live} tier1Live={this.state.tobey.live.tier1Live}\n                tier2Live={this.state.tobey.live.tier2Live} tier3Live={this.state.tobey.live.tier3Live} tier4Live={this.state.tobey.live.tier4Live}/>\n            </Container>\n            <Container>\n              <Integrator name={this.state.johnny.info.name} image={this.state.johnny.info.image} \n                title={this.state.johnny.info.title} slack={this.state.johnny.info.slack} timezone={this.state.johnny.info.timezone}\n                phone={this.state.johnny.info.phone} email={this.state.johnny.info.email} office={this.state.johnny.info.office} \n                manager={this.state.johnny.info.manager}  total={this.state.johnny.records.total} monthly={this.state.johnny.records.monthly}\n                colorProp={this.state.johnny.records.colorProp} daily={this.state.johnny.records.daily} mostRecentName={this.state.johnny.records.mostRecentName} mostRecentDate={this.state.johnny.records.mostRecentDate}\n                mostRecentSubmitter={this.state.johnny.records.mostRecentSubmitter} mostRecentBuilder={this.state.johnny.records.mostRecentBuilder}\n                mostRecentTier={this.state.johnny.records.mostRecentTier} mostRecentShortname={this.state.johnny.records.mostRecentShortname}\n                mostRecentWebType={this.state.johnny.records.mostRecentWebType} mostRecentCompanyRegion={this.state.johnny.records.mostRecentCompanyRegion} \n                totalLive={this.state.johnny.live.total} monthlyLive={this.state.johnny.live.monthly}\n                dailyLive={this.state.johnny.live.daily} mostRecentNameLive={this.state.johnny.live.mostRecentNameLive} mostRecentDateLive={this.state.johnny.live.mostRecentDateLive}\n                mostRecentSubmitterLive={this.state.johnny.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.johnny.live.mostRecentIntegrationTypeLive}\n                mostRecentTierLive={this.state.johnny.live.mostRecentTierLive} mostRecentShortnameLive={this.state.johnny.live.mostRecentShortnameLive}\n                mostRecentWebTypeLive={this.state.johnny.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.johnny.live.mostRecentCompanyRegionLive} \n                colorPropLive={this.state.johnny.live.colorProp} tier0={this.state.johnny.records.tier0} tier1={this.state.johnny.records.tier1}\n                tier2={this.state.johnny.records.tier2} tier3={this.state.johnny.records.tier3} tier4={this.state.johnny.records.tier4} \n                tier0Live={this.state.johnny.live.tier0Live} tier1Live={this.state.johnny.live.tier1Live}\n                tier2Live={this.state.johnny.live.tier2Live} tier3Live={this.state.johnny.live.tier3Live} tier4Live={this.state.johnny.live.tier4Live}/>\n            </Container>\n            <Container>\n              <Integrator name={this.state.elly.info.name} image={this.state.elly.info.image} \n                title={this.state.elly.info.title} slack={this.state.elly.info.slack} timezone={this.state.elly.info.timezone}\n                phone={this.state.elly.info.phone} email={this.state.elly.info.email} office={this.state.elly.info.office} \n                manager={this.state.elly.info.manager}  total={this.state.elly.records.total} monthly={this.state.elly.records.monthly}\n                daily={this.state.elly.records.daily} mostRecentName={this.state.elly.records.mostRecentName} mostRecentDate={this.state.elly.records.mostRecentDate}\n                mostRecentSubmitter={this.state.elly.records.mostRecentSubmitter} mostRecentBuilder={this.state.elly.records.mostRecentBuilder}\n                mostRecentTier={this.state.elly.records.mostRecentTier} mostRecentShortname={this.state.elly.records.mostRecentShortname}\n                mostRecentWebType={this.state.elly.records.mostRecentWebType} mostRecentCompanyRegion={this.state.elly.records.mostRecentCompanyRegion} \n                colorProp={this.state.elly.records.colorProp} totalLive={this.state.elly.live.total} monthlyLive={this.state.elly.live.monthly}\n                dailyLive={this.state.elly.live.daily} mostRecentNameLive={this.state.elly.live.mostRecentNameLive} mostRecentDateLive={this.state.elly.live.mostRecentDateLive}\n                mostRecentSubmitterLive={this.state.elly.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.elly.live.mostRecentIntegrationTypeLive}\n                mostRecentTierLive={this.state.elly.live.mostRecentTierLive} mostRecentShortnameLive={this.state.elly.live.mostRecentShortnameLive}\n                mostRecentWebTypeLive={this.state.elly.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.elly.live.mostRecentCompanyRegionLive} tier0={this.state.elly.records.tier0} tier1={this.state.elly.records.tier1}\n                colorPropLive={this.state.elly.live.colorProp} tier2={this.state.elly.records.tier2} tier3={this.state.elly.records.tier3} tier4={this.state.elly.records.tier4} \n                tier0Live={this.state.elly.live.tier0Live} tier1Live={this.state.elly.live.tier1Live}\n                tier2Live={this.state.elly.live.tier2Live} tier3Live={this.state.elly.live.tier3Live} tier4Live={this.state.elly.live.tier4Live}/>\n            </Container>\n            <Container>\n           <Integrator name={this.state.zack.info.name} image={this.state.zack.info.image} \n             title={this.state.zack.info.title} slack={this.state.zack.info.slack} timezone={this.state.zack.info.timezone}\n             phone={this.state.zack.info.phone} email={this.state.zack.info.email} office={this.state.zack.info.office} \n             manager={this.state.zack.info.manager}  total={this.state.zack.records.total} monthly={this.state.zack.records.monthly}\n             daily={this.state.zack.records.daily} mostRecentName={this.state.zack.records.mostRecentName} mostRecentDate={this.state.zack.records.mostRecentDate}\n             mostRecentSubmitter={this.state.zack.records.mostRecentSubmitter} mostRecentBuilder={this.state.zack.records.mostRecentBuilder}\n             mostRecentTier={this.state.zack.records.mostRecentTier} mostRecentShortname={this.state.zack.records.mostRecentShortname}\n             mostRecentWebType={this.state.zack.records.mostRecentWebType} mostRecentCompanyRegion={this.state.zack.records.mostRecentCompanyRegion}  \n             colorProp={this.state.zack.records.colorProp} totalLive={this.state.zack.live.total} monthlyLive={this.state.zack.live.monthly}\n             dailyLive={this.state.zack.live.daily} mostRecentNameLive={this.state.zack.live.mostRecentNameLive} mostRecentDateLive={this.state.zack.live.mostRecentDateLive}\n             mostRecentSubmitterLive={this.state.zack.live.mostRecentSubmitterLive} mostRecentIntegrationTypeLive={this.state.zack.live.mostRecentIntegrationTypeLive}\n             mostRecentTierLive={this.state.zack.live.mostRecentTierLive} mostRecentShortnameLive={this.state.zack.live.mostRecentShortnameLive}\n             mostRecentWebTypeLive={this.state.zack.live.mostRecentWebTypeLive} mostRecentCompanyRegionLive={this.state.zack.live.mostRecentCompanyRegionLive} \n             colorPropLive={this.state.zack.live.colorProp}tier0={this.state.zack.records.tier0} tier1={this.state.zack.records.tier1}\n             tier2={this.state.zack.records.tier2} tier3={this.state.zack.records.tier3} tier4={this.state.zack.records.tier4} \n             tier0Live={this.state.zack.live.tier0Live} tier1Live={this.state.zack.live.tier1Live}\n             tier2Live={this.state.zack.live.tier2Live} tier3Live={this.state.zack.live.tier3Live} tier4Live={this.state.zack.live.tier4Live}/>\n            </Container>\n          </AppContainer>\n          </div>\n          }\n          \n      </div>\n  )\n}\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/airtable-logo.5412b431.png\";","module.exports = __webpack_public_path__ + \"static/media/fh-patrick.7aa99918.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alex-neubauer.3593eb7f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/amaia-ibarra.48c266b7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/marco.82839f53.png\";","module.exports = __webpack_public_path__ + \"static/media/zack.ebc2d922.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/elly.72b65afb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tobey.c7419d50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/johnny.4dfc17ce.png\";"],"sourceRoot":""}